(1(haml-mode .[(3 1 5)((ruby-mode (1 0)))"Major mode for editing Haml files"single])(paredit .[(22)()"minor mode for editing parentheses  -*- Mode: Emacs-Lisp -*-"single])(perspective .[(1 9)()"switch between named \"perspectives\" of the editor"single])(slime .[(20100404 1)()"Superior Lisp Interaction Mode for Emacs"single])(slime-repl .[(20100404)((slime (20100404)))"Read-Eval-Print Loop written in Emacs Lisp"single])(ac-cider-compliment .[(0 1 0)((cider (0 5 0)) (auto-complete (1 4)))"auto-complete sources for Clojure using"single])(project-explorer .[(0 13)((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24)))"A project explorer sidebar -*- lexical-binding: t -*-"single])(web .[(0 4 1)()"useful HTTP client -*- lexical-binding: t -*-"single])(idle-highlight .[(1 0)()"highlight the word the point is on"single])(magit .[(1 2 0)()"Control Git from Emacs."tar])(durendal .[(0 2)((clojure-mode (1 7)) (slime (20100404)) (paredit (22)))"A bucket of tricks for Clojure and Slime."single])(htmlize .[(1 39)()"Convert buffer text and decorations to HTML."single])(furl .[(0 0 2)()"Friendly URL retrieval"single])(marmalade .[(0 0 4)((furl (0 0 2)))"Elisp interface for the Emacs Lisp package server."single])(yari .[(0 7)()"Yet Another RI interface for Emacs"single])(html-script-src .[(0 0 2)()"Insert <script src=\"..\"> for popular JavaScript libraries"single])(guru-mode .[(0 2)()"Become an Emacs guru   -*- lexical-binding:t -*-"single])(enclose .[(0 0 2)()"Enclose cursor within punctuation pairs"single])(mactag .[(0 0 1)()"Mode for automatically handle multiple tags files with Mactag rubygem"single])(diminish .[(0 44)()"Diminished modes are minor modes with no modeline display"single])(notify .[(2010 8 20)()"notification front-end"single])(keywiz .[(1 4)()"Emacs key sequence quiz"single])(descbinds-anything .[(1 5)((anything (1 287)))"Yet Another `describe-bindings' with `anything'."single])(autopair .[(0 3)()"Automagically pair braces and quotes like TextMate"single])(highlight-parentheses .[(1 0 1)()"highlight surrounding parentheses"single])(rvm .[(1 3 0)()"Emacs integration for rvm"single])(anything .[(1 287)()"open anything / QuickSilver-like candidate-selection framework"single])(anything-config .[(0 4 1)()"Predefined configurations for `anything.el'"single])(anything-match-plugin .[(1 27)()"Humane match plug-in for anything"single])(closure-template-html-mode .[(0 1)()"highlighting for google closure templates"single])(gist .[(1 1 1)((eieio (1 3)) (gh (0 7 2)) (tabulated-list (0)))"Emacs integration for gist.github.com"single])(highlight-symbol .[(1 1)()"automatic and manual symbol highlighting"single])(color-theme-twilight .[(0 1)()"Twilight Colour Theme for Emacs."single])(undo-tree .[(0 3 1)()"Treat undo history as a tree"single])(browse-kill-ring .[(1 3 1)()"interactively insert items from kill-ring -*- coding: utf-8 -*-"single])(buffer-move .[(0 4)()"swap buffers between windows"single])(dired-single .[(1 7 0)()"reuse the current dired buffer to visit another directory"single])(php-mode .[(1 5 0)()"major mode for editing PHP code"single])(c-eldoc .[(0 5)()"helpful description of the arguments to C functions"single])(full-ack .[(0 2 3)()"a front-end for ack"single])(find-file-in-project .[(3 2)()"Find files in a project quickly."single])(project .[(1 0)()"Keep track of the current project"single])(goto-last-change .[(1 2)()"Move point through buffer-undo-list positions -*-unibyte: t; coding: iso-8859-1;-*-"single])(http-twiddle .[(1 0)()"send & twiddle & resend HTTP requests"single])(mac-key-mode .[(2010 1 3)()"provide mac-style key bindings on Carbon Emacs"single])(flymake-cursor .[(1 0 2)((flymake (0 3)))"Show flymake messages in the minibuffer after delay"tar])(multi-term .[(0 8 8)()"Managing multiple terminal buffers in Emacs."single])(parenface .[(1 1)()"Provide a face for parens in lisp modes."single])(gnuplot .[(0 6 0)()"drive gnuplot from within emacs"single])(auto-indent-mode .[(0 126)()"Auto indent Minor mode"single])(nsis-mode .[(0 44)()"NSIS-mode"single])(ecb .[(2 40)()"Emacs Code Browser"tar])(speck .[(2010 5 25)()"minor mode for spell checking"single])(hexrgb .[(21 0)()"Functions to manipulate colors, including RGB hex strings."single])(icomplete+ .[(21 0)()"Extensions to `icomplete.el'."single])(lacarte .[(22 0)()"Execute menu items as commands, with completion."single])(synonyms .[(1 0)()"Look up synonyms for a word or phrase in a thesaurus."single])(predictive .[(0 19 5)()"Predictive Mode (Contains Dependencies)"tar])(rw-hunspell .[(0 2)()"special functions for Hunspell in ispell.el"single])(rw-ispell .[(0 1)()"additional functions for ispell.el"single])(rw-language-and-country-codes .[(0 1)()"Language & Country Codes"single])(yas-jit .[(0 8 3)()"Loads Yasnippets on demand (makes start up faster)"single])(textmate-to-yas .[(0 21)()"Import Textmate macros into yasnippet syntax"single])(ntcmd .[(1 0)()"major mode for editing cmd scripts"single])(org-table-comment .[(0 2)()" Org table comment modes."single])(anything-extension .[(0 2)()"Extension functions for anything.el"single])(powershell .[(0 2 1)()"run powershell as an inferior shell in emacs"single])(cdlatex .[(4 0)()"Fast input methods for LaTeX environments and math"single])(anything-R .[(0 1 2010)()"anything-sources and some utilities for GNU R."single])(anything-el-swank-fuzzy .[(0 1 2009)()"anything-sources for el-swank-fuzzy.el"single])(anything-ipython .[(0 1 2009)()" Ipython anything"single])(color-file-completion .[(1 0 1)()"add colors to file completion"single])(color-theme-emacs-revert-theme .[(0 1)()"Color-theme revert to emacs colors"single])(anything-complete .[(1 86)()"completion with anything"single])(anything-obsolete .[(0 1)()"obsolete functions of anything"single])(ipython .[(2927)()"Adds support for IPython to python-mode.el"single])(el-swank-fuzzy .[(0 1)()"fuzzy symbol completion."single])(fold-dwim .[(1 2)()"Unified user interface for Emacs folding modes"single])(fold-dwim-org .[(0 5)((fold-dwim (1 2)))"Fold DWIM bound to org key-strokes."single])(fuzzy-match .[(1 4)()"fuzzy matching"single])(w32-browser .[(21 0)()"Run Windows application associated with a file."single])(crosshairs .[(22 0)()"Highlight the current line and column."single])(vline .[(1 10)()"show vertical line (column highlighting) mode."single])(hl-line+ .[(22 0)()"Extensions to hl-line.el."single])(col-highlight .[(22 0)((vline (1 10)))"Highlight the current column."single])(color-theme-vim-insert-mode .[(0 1)()"Color theme VIM insert mode"single])(cursor-chg .[(20 1)()"Change cursor dynamically, depending on the context."single])(cygwin-mount .[(2001)()"Teach EMACS about cygwin styles and mount points."single])(header2 .[(21 0)()"Support for creation and update of file headers."single])(lib-requires .[(21 0)()"Commands to list Emacs Lisp library dependencies."single])(linum-off .[(0 1)()"Provides an interface for turning line-numbering off"single])(pos-tip .[(0 4 5)()"Show tooltip at point -*- coding: utf-8 -*-"single])(key-choices .[(0 201)((color-theme-vim-insert-mode (0 1)) (color-theme-emacs-revert-theme (0 1)))"Key Choices -- Also Viper has different colors in different modes"single])(tabbar .[(2 0 1)()"Display a tab bar in the header line  -*-no-byte-compile: t; -*-"single])(tabbar-ruler .[(0 40)((tabbar (2 0 1)))"Pretty tabbar, autohide, use both tabbar/ruler"single])(android-mode .[(0 2 5)()"Minor mode for Android application development"single])(elein .[(0 2 2)()"running leiningen commands from emacs"single])(sumatra-forward .[(2008 10 8)()"Provides Sumatra Forward search"single])(org-outlook .[(0 3)()"Outlook org"single])(clojure-test-mode .[(3 0 0)((clojure-mode (1 7)) (cider (0 4 0)))"Minor mode for Clojure tests"single])(slime-fuzzy .[(20100404)((slime (20100404)))"Fuzzy symbol completion for Slime"single])(r-autoyas .[(0 28)()"Provides automatically created yasnippets for R function argument lists."single])(color-theme-complexity .[(0 1 0)((color-theme (6 6 0)))"A black and green color theme for Emacs."single])(starter-kit .[(2 0 3)((paredit (22)) (idle-highlight-mode (1 1 1)) (find-file-in-project (3 0)) (smex (1 1 1)) (ido-ubiquitous (0 3)) (magit (0 8 1)))"Saner defaults and goodies."tar])(starter-kit-lisp .[(2 0 3)((starter-kit (2 0 2)) (elisp-slime-nav (0 1)))"Saner defaults and goodies for lisp languages"single])(starter-kit-js .[(2 0 1)((starter-kit (2 0 1)))"Saner defaults and goodies for Javascript"single])(starter-kit-ruby .[(2 0 3)((inf-ruby (2 2 3)) (starter-kit (2 0 1)))"Saner defaults and goodies for Ruby"single])(geben .[(0 26)()"A remote debugging environment for Emacs."tar])(maxframe .[(0 5 1)()"maximize the emacs frame based on display size"single])(mode-compile .[(2 29)()" Smart command for compiling files"single])(swank-cdt .[(1 0 1)()"swank-cdt helper functions"single])(find-file-in-git-repo .[(0 1 2)()"Utility to find files in a git repo"single])(idle-highlight-mode .[(1 1 2)()"highlight the word the point is on"single])(inf-ruby .[(2 3 2)()"Run a Ruby process in a buffer"single])(protobuf-mode .[(0 3)()"major mode for editing protocol buffers."single])(haskell-mode .[(13 7)()"A Haskell editing mode"tar])(znc .[(0 0 2)((cl (2 2)) (erc (5 3)))"ZNC + ERC "single])(slime-clj .[(0 1 5)()"slime extensions for swank-clj"single])(scala-mode .[(0 0 2)()"Scala major mode"tar])(keyfreq .[(0 0 3)((json (1 2)))"track command frequencies"single])(json .[(1 2)()"JavaScript Object Notation parser / generator"single])(magit-simple-keys .[(1 0 0)((magit (1 0 0)))"simple keybindings for Magit"single])(rainbow-delimiters .[(1 3 4)()"Highlight nested parens, brackets, braces a different color at each depth."single])(switch-window .[(0 9)()"A *visual* way to choose a window to switch to"single])(yaml-mode .[(0 0 9)()"Major mode for editing YAML files"single])(prolog .[(1 22)()"major mode for editing and running Prolog (and Mercury) code"single])(graphviz-dot-mode .[(0 3 7)()"Mode for the dot-language used by graphviz (att)."single])(perlcritic .[(1 10)()"minor mode for Perl::Critic integration"single])(button-lock .[(1 0 0)()"Clickable text defined by regular expression"single])(wiki-nav .[(1 0 0)((button-lock (1 0 0)) (nav-flash (1 0 0)))"Simple file navigation using [[WikiStrings]]"single])(gh .[(0 8 0)((eieio (1 3)) (pcache (0 2 4)) (logito (0 1)))"A GitHub library for Emacs"tar])(vala-mode .[(0 1)()"Vala mode derived mode"single])(fill-column-indicator .[(1 86)()"Graphically indicate the fill column"single])(alpha .[(1 0)()"increase frame transparency"single])(color-theme-ir-black .[(1 0 1)((color-theme (6 6 1)))"pastel color theme "single])(calfw-gcal .[(0 0 1)()"edit Google calendar for calfw.el."single])(python .[(20120402)()"Python's flying circus support for Emacs"single])(htmlfontify .[(0 21)()"htmlise a buffer/source tree with optional hyperlinks"single])(oddmuse .[(20090222)()"edit pages on an Oddmuse wiki"single])(wgrep .[(2 1 3)()"Writable grep buffer and apply the changes to files"single])(langtool .[(1 2 1)()"Grammar check utility using LanguageTool"single])(pcsv .[(1 3 3)()"Parser of csv -*- lexical-binding: t -*-"single])(gather .[(1 0 4)()"Gather string in buffer."single])(erefactor .[(0 6 10)()"Emacs-Lisp refactoring utilities"single])(starter-kit-bindings .[(2 0 2)((starter-kit (2 0 2)))"Saner defaults and goodies: bindings"single])(slime-ritz .[(0 6 0)()"slime extensions for ritz"single])(hl-sentence .[(2)()"highlight a sentence based on customizable face"single])(mustache-mode .[(1 2)()"A major mode for editing Mustache files."single])(color-theme-eclipse .[(0 0 2)((color-theme (6 6 1)))"Eclipse color theme for GNU Emacs."single])(bm .[(1 53)()"Visible bookmarks in buffer."single])(color-theme-railscasts .[(0 0 2)((color-theme (6 6 1)))"Railscasts color theme for GNU Emacs."single])(color-theme-tango .[(0 0 2)((color-theme (6 6 1)))"Tango palette color theme for GNU Emacs."single])(color-theme-github .[(0 0 3)((color-theme (6 6 1)))"Github color theme for GNU Emacs."single])(color-theme-dpaste .[(0 0 1)((color-theme (6 6 1)))"Dpaste color theme for GNU Emacs."single])(nose .[(0 1 1)()"Easy Python test running in Emacs"single])(dpaste .[(0 2)()"Emacs integration for dpaste.com"single])(offlineimap .[(0 1)()"Run OfflineIMAP from Emacs"single])(virtualenv .[(1 2)()"Virtualenv for Python  -*- coding: utf-8 -*-"single])(scss-mode .[(0 5 0)()"Major mode for editing SCSS files"single])(highlight-indentation .[(0 5 0)()"Function for highlighting indentation"single])(feature-mode .[(0 4)()"Major mode for editing Gherkin (i.e. Cucumber) user stories"tar])(dired-details .[(1 3 1)()"make file details hide-able in dired"single])(dired-details+ .[(1 0)()"Enhancements to library `dired-details+.el'."single])(python-pep8 .[(1 1)()"minor mode for running `pep8'"single])(python-pylint .[(1 1)()"minor mode for running `pylint'"single])(workgroups .[(0 2 0)()"workgroups for windows (for Emacs)"single])(closure-lint-mode .[(0 1)()"minor mode for the Closure Linter"single])(ruby-test-mode .[(1 7)((ruby-mode (1 0)))"Minor mode for Behaviour and Test Driven"single])(httpd .[(1 0 1)()"HTTP/1.0 web server for emacs"single])(pep8 .[(1 2)()"run the python pep8 checker putting hits in a grep buffer"single])(cppcheck .[(1 0)()"run cppcheck putting hits in a grep buffer"single])(grin .[(1 0)()"run grin and grind (python replacements for grep and find) putting hits in a grep buffer"single])(pyflakes .[(1 0)()"run the python pyflakes checker putting hits in a grep buffer"single])(pylint .[(1 0)()"run the python pylint checker putting hits in a grep buffer"single])(midje-mode .[(0 1 2)((slime (1 0)) (clojure-mode (1 0)))"Minor mode for running Midje tests in emacs, see: https://github.com/dnaumov/midje-mode"tar])(fastnav .[(1 0 7)()"Fast navigation and editing routines."single])(confluence .[(1 6)((xml-rpc (1 6 7)))"Confluence major mode"tar])(tuareg .[(2 0 8)((caml (3 12 0 1)))"OCaml mode for Emacs"tar])(pp-c-l .[(1 0)()"Display Control-l characters in a pretty way"single])(js-comint .[(0 0 1)()"Run javascript in an inferior process window."single])(smart-operator .[(1 9 20110812)()"Insert operators with surrounding spaces smartly"single])(ibuffer-vc .[(0 7)((cl-lib (0 2)))"Group ibuffer's list by VC project, or show VC status"single])(color-theme-sanityinc-solarized .[(2 25)()"A version of Ethan Schoonover's Solarized themes"tar])(elisp-slime-nav .[(0 7)((cl-lib (0 2)))"Make M-. and M-, work in elisp like they do in slime"single])(erc-hl-nicks .[(1 3 1)()"ERC nick highlighter that ignores uniquifying chars when colorizing"single])(org-magit .[(0 2 0)((magit (0 8)) (org (6 1)))"basic support for magit links"single])(whole-line-or-region .[(1 3 1)()"operate on current line if region undefined"single])(ido-ubiquitous .[(2 10)((emacs (24 1)))"Use ido (nearly) everywhere."single])(bigint .[(1 0 0)()"A simple bigint package for emacs"single])(dizzee .[(0 1 1)()"A more pleasant way to manage your project's subprocesses in Emacs."tar])(color-theme-dg .[(0 1 0)((color-theme (6 6 0)))"A black and green color theme for Emacs."single])(gimme .[(2 1)()"The XMMS2 interface we all love! Check out http://gimmeplayer.org for more info."tar])(deft .[(0 3)()"quickly browse, filter, and edit plain text notes"single])(pony-mode .[(0 2)()"Minor mode for working with Django Projects"tar])(clojurescript-mode .[(0 5)()"Major mode for ClojureScript code"single])(flymake-ruby .[(0 8)((flymake-easy (0 1)))"A flymake handler for ruby-mode files"single])(django-theme .[(1 3 0)()"Custom face theme for Emacs"single])(fsvn .[(0 9 13)()"Another frontend of subversion."tar])(starter-kit-eshell .[(2 0 3)()"Saner defaults and goodies: eshell tweaks"single])(yasnippet-bundle .[(0 6 1)()"Yet another snippet extension (Auto compiled bundle)"single])(yasnippet .[(0 6 1)()"Yasnippet template engine"tar])(flymake-coffee .[(0 12)((flymake-easy (0 1)))"A flymake handler for coffee script"single])(flymake-haml .[(0 7)((flymake-easy (0 1)))"A flymake handler for haml files"single])(markdown-mode .[(2 0)()"Emacs Major mode for Markdown-formatted text files"single])(ido-yes-or-no .[(1 1)((ido (0)))"Use Ido to answer yes-or-no questions"single])(caml .[(3 12 0 1)()"OCaml code editing commands for Emacs"tar])(dtrt-indent .[(0 2 0)()"Adapt to foreign indentation offsets"single])(windsize .[(0 1)()"Simple, intuitive window resizing"single])(jira .[(0 3 3)()"Connect to JIRA issue tracking software"single])(wisp-mode .[(0 1 5)()"Tools for wisp: the Whitespace-to-Lisp preprocessor"single])(cmake-mode .[(20110824)()"Major mode for editing CMake sources."single])(initchart .[(0 1 1)((cl-lib (0 3)))"Emacs' init process performance visualization  -*- lexical-binding: t -*-"single])(immutant-server .[(1 0 1)()"Run your Immutant server in Emacs"single])(dummy-package .[(0 0 3)((timeclock (2 6 1)))"a fake package for the marmalade test suite"single])(cobra-mode .[(1 0 1)()"Major mode for .NET-based Cobra language"single])(textmate .[(5)()"TextMate minor mode for Emacs"single])(xml-rpc .[(1 6 8)()"An elisp implementation of clientside XML-RPC"single])(coffee-mode .[(0 3 0)()"Major mode to edit CoffeeScript files in Emacs"single])(sr-speedbar .[(0 1 8)()"Same frame speedbar"single])(desktop .[(0 1)()"save partial status of Emacs when killed"single])(evil-numbers .[(0 3)()"increment/decrement numbers like in vim"single])(lolcode-mode .[(0 2)()"Major mode for editing LOLCODE"single])(projectile .[(0 10 0)((s (1 6 0)) (dash (1 5 0)) (pkg-info (0 4)))"Manage and navigate projects in Emacs easily"single])(dedicated .[(1 0 0)()"A very simple minor mode for dedicated buffers"single])(csharp-mode .[(0 8 6)()"C# mode derived mode"single])(color-theme-actress .[(0 2 2)((color-theme (6 6 1)))"A dark color theme for GNU Emacs."single])(ghc .[(1 10 2)((haskell-mode (2 8 0)))"Happy Haskell programming on Emacs"tar])(org-email .[(1 0)()"use org for an email database -*- lexical-binding: t -*-"single])(ahg .[(0 99)()"Alberto's Emacs interface for Mercurial (Hg)"single])(elnode .[(0 9 9 7 6)((web (0 1 4)) (dash (1 1 0)) (noflet (0 0 7)) (s (1 5 0)) (creole (0 8 14)) (fakir (0 1 6)) (db (0 0 5)) (kv (0 0 17)))"The Emacs webserver."tar])(lua-mode .[(20110428)()"a major-mode for editing Lua scripts"single])(ac-slime .[(0 5)()"An auto-complete source using slime completions"single])(vc-darcs .[(1 12)()"a VC backend for darcs"single])(elisp-cache .[(1 15)()"Faster emacs startup through byte-compiling."single])(scratch .[(20110708)()"Mode-specific scratch buffers"single])(hl-sexp .[(1 0 0)()"highlight the current sexp"single])(dsvn .[(922257)()"Subversion interface"single])(crontab-mode .[(1 2)()"Mode for editing crontab files"single])(popwin .[(0 4)()"Popup Window Manager."single])(session .[(2 2 1)()"use variables, registers and buffer places across sessions"single])(smart-tab .[(0 3)()"Intelligent tab completion and indentation."single])(flymake-shell .[(0 8)((flymake-easy (0 1)))"A flymake syntax-checker for shell scripts"single])(ac-ja .[(0 0 1)()"auto-complete-mode source for Japanese "single])(rcirc-notify .[(0 6)()"libnotify popups"single])(flymake-jslint .[(0 10)((flymake-easy (0 1)))"A flymake handler for javascript using jslint"single])(dart-mode .[(0 9)()"Major mode for editing Dart files"single])(color-theme-blackboard .[(0 0 2)((color-theme (6 6 1)))"Blackboard Colour Theme for Emacs."single])(color-theme-wombat .[(0 0 1)((color-theme (6 6 1)))"The wombat color theme for Emacs."single])(color-theme-wombat+ .[(0 0 2)((color-theme (6 6 1)))"wombat with improvements and many more faces"single])(color-theme-active .[(0 0 1)((color-theme (6 6 1)))"Active theme inspired by jEdit theme of the same name"single])(color-theme-colorful-obsolescence .[(0 0 1)((color-theme (6 6 1)))"Colorful Obsolescence theme designed for partially transparent windows"single])(apache-mode .[(2 0)()"major mode for editing Apache configuration files"single])(highline .[(7 2 2)()"minor mode to highlight current line in buffer"single])(mic-paren .[(3 8)()"advanced highlighting of matching parentheses"single])(pytest .[(0 2 1)()"Easy Python test running in Emacs"single])(wikidoc .[(0 8 1)()"use elisp doc strings to make other documentation"single])(flymake-sass .[(0 6)((flymake-easy (0 1)))"Flymake handler for sass files"single])(regex-tool .[(1 2)()"A regular expression evaluation tool for programmers"single])(tabkey2 .[(1 40)()"Use second tab key pressed for what you want"single])(save-visited-files .[(1 3)()"save opened files across sessions"single])(ioccur .[(0 2)()"Incremental occur."single])(javadoc-help .[(1 0)()"Javadoc-Help.  Look up Java class on online javadocs in browser."single])(macro-math .[(1 0)()"in-buffer mathematical operations"single])(winpoint .[(1 4)()"Remember buffer positions per-window, not per buffer"single])(scheme-complete .[(0 8 2)()"Smart tab completion for Emacs"single])(ruby-compilation .[(0 17)((inf-ruby (2 2 1)))"run a ruby process in a compilation buffer"single])(rinari .[(2 10)((ruby-mode (1 0)) (inf-ruby (2 2 1)) (ruby-compilation (0 8)) (jump (2 0)))"Rinari Is Not A Rails IDE"single])(flymake-php .[(0 5)((flymake-easy (0 1)))"A flymake handler for php-mode files"single])(flymake-jshint .[(1 0)()"making flymake work with JSHint"single])(doc-mode .[(0 2)()"convenient editing of in-code documentation"single])(gccsense .[(0 2)()"GCCSense client for Emacs"single])(p4 .[(11 0)()"Perforce-Emacs Integration Library"single])(pager .[(2 0)()"windows-scroll commands"single])(pastebin .[(0 1)()"A simple interface to the www.pastebin.com webservice"single])(cache .[(0 1)()"implementation of a hash table whose key-value pairs expire"single])(command-frequency .[(1 1)()"Track command frequencies"single])(guess-offset .[(0 1 1)()"Automatically determine c-basic-offset"single])(loccur .[(1 1 1)()"Perform an occur-like folding in current buffer"single])(recursive-narrow .[(1 0)()"narrow-to-region that operates recursively"single])(member-function .[(0 3 1)()"expand member functions for C++ classes"single])(window-number .[(1 0 1)()"Jump to a window by number"single])(gtags .[(3 3)()"gtags facility for Emacs"single])(pymacs .[(0 25)()"Interface between Emacs Lisp and Python"single])(pysmell .[(0 7 2)()"Complete python code using heuristic static analysis"single])(eieio .[(1 4)()"Enhanced Implememntation of Emacs Interpreted Objects"tar])(rudel .[(0 3)((eieio (1 4)))"A collaborative editing framework for Emacs"tar])(jabber .[(0 8 90)()"A Jabber client for Emacs."tar])(citrus-mode .[(0 0 2)()"Major mode for editing Citrus files"single])(lineno .[(0 1)()"Alternate mode to display line numbers."single])(emacsd-tile .[(0 1)()"tiling windows for emacs"single])(iy-go-to-char .[(1 0)()"Go to next CHAR which is similar to \"f\" in vim"single])(creole .[(1 0 3)((noflet (0 0 3)) (kv (0 0 17)))"A parser for the Creole Wiki language"single])(jenkins-watch .[(1 2)()"Watch continuous integration build status -*- indent-tabs-mode: t; tab-width: 8 -*-"single])(peepopen .[(0 1 0)()"Graphical file chooser for Emacs on Mac OS X."single])(levenshtein .[(1 0)()"Edit distance between two strings."single])(gopher .[(0 0 2)()"easily access and navigate Gopher servers"single])(clojure-project-mode .[(1 0)((project-mode (1 0)))"Extends project-mode for Clojure projects"single])(ruby-block .[(0 0 11)()"highlight matching block"single])(pretty-lambdada .[(22 0)()"Show the word `lambda' as the Greek letter."single])(rect-mark .[(1 4)()"Mark a rectangle of text with highlighting."single])(evernote-mode .[(0 41)()"Evernote client for Emacs"tar])(centered-cursor-mode .[(0 5 1)()"cursor stays vertically centered"single])(wget .[(1 94)()"Emacs-wget is an interface program of GNU wget on Emacs."tar])(mldonkey .[(0 0 4)()"Multi-networks peer-to-peer client."tar])(sml-modeline .[(0 5)()"Show position in a scrollbar like way in mode-line"single])(mwe-log-commands .[(20041106)()"log keyboard commands to buffer"single])(move-text .[(1 0)()"Move current line or region with M-up or M-down."single])(hippie-expand-slime .[(0 1)()"Hook slime's completion into hippie-expand"single])(boxquote .[(1 23)()"Quote text with a semi-box."single])(gnugo .[(2 2 12)()"Play a game of Go against gnugo"single])(project-mode .[(1 0)((levenshtein (1 0)))"Define code projects. Full-text search, etc."single])(n3-mode .[(20071215)()"mode for Notation 3"single])(wcheck-mode .[(2013 6 25)()"General interface for text checkers"tar])(el-autoyas .[(0 5)()"Automatically create Emacs-Lisp Yasnippets"single])(org2blog .[(0 5)((org (7 7)) (xml-rpc (1 6 8)))"Blog from Org mode to wordpress"tar])(pcache .[(0 2 4)((eieio (1 3)))"persistent caching for Emacs"single])(mocker .[(0 3 0)((eieio (1 3)) (el-x (0 2 4)))"mocking framework for emacs"single])(idle-require .[(1 0)()"load elisp libraries while Emacs is idle"single])(find-things-fast .[(20111123)()"An emacs mode to find things fast and move around in a project quickly"tar])(color-theme-gruber-darker .[(1)((color-theme (6 6 1)))"Gruber Darker color theme for Emacs by Jason Blevins"single])(dna-mode .[(1 44)()"a major mode for editing dna sequences"single])(perl-myvar .[(1 25)()"Declare lexicaly scoped vars as my()."single])(nlet .[(1 10)()"schemes 'named let' for emacs."single])(ssh-config-mode .[(1 13)()"Mode for fontification of ~/.ssh/config"single])(win-switch .[(1 0 8)()"fast, dynamic bindings for window-switching/resizing"single])(j-mode .[(0 3)()"Major mode for editing J programs"single])(key-combo .[(1 5 1)()"map key sequence to commands"single])(nginx-mode .[(1 1)()"major mode for editing nginx config files"single])(vimgolf .[(0 9 2)()"VimGolf interface for the One True Editor"single])(flymake-csslint .[(1 1 0)((flymake (0 3)))"making flymake work with CSSLint"tar])(typing .[(1 1 4)()"A game for fast typers, inspired by The Typing Of The Dead."single])(zenburn-theme .[(2 1)()"A low contrast color theme for Emacs."single])(solarized-theme .[(1 0 0)()"The Solarized color theme, ported to Emacs."tar])(etags-select .[(1 13)()"Select from multiple tags"single])(etags-table .[(1 1)()"Set tags table(s) based on current file"single])(flymake-css .[(0 3)((flymake-easy (0 1)))"Flymake support for css using csslint"single])(tintin-mode .[(1 0 0)()"Mayor mode for editing tintin++ scripts"single])(org-cua-dwim .[(0 5)()"Org-mode and Cua mode compatibility layer"single])(otp .[(1 0)()"a one-time password creator"single])(bookmark+ .[(20111214)()"Bookmark Plus"tar])(sentence-highlight .[(0 1)()"highlight the current sentence"single])(smartrep .[(0 0 3)()"Support sequential operation which omitted prefix keys."single])(tabula-rasa-mode .[(0 1 0)()"Distraction free writing mode"single])(abl-mode .[(0 9 0)()"Python TDD minor mode"single])(grails-mode .[(0 1)()"minor-mode that adds some Grails project management to a grails project"single])(inf-groovy .[(2 0)()"minor-mode that adds some Grails project management to a grails project"single])(tidy .[(2 12)()"Interface to the HTML Tidy program"single])(simp .[(0 2 0)()"Simple project definition, chiefly for project file finding and grepping."tar])(httpcode .[(0 1)()"explains the meaning of an HTTP status code"single])(d-mode .[(2 0 4)()"D Programming Language mode for (X)Emacs"tar])(git-commit .[(0 1)()"Major mode for editing git commit messages"single])(color-theme-library .[(0 0 10)((color-theme (6 6 1)))"The real color theme functions"single])(sauron .[(0 8)()"Track (erc/org/dbus/...) events and react to them."tar])(quickrun .[(1 8 4)()"Run commands quickly"single])(rcirc-color .[(0 2)()"color nicks"single])(rcirc-ucomplete .[(1 0 1)()"Unambiguous non-cycling completion for rcirc"single])(color-theme-sanityinc-tomorrow .[(1 10)()"A version of Chris Kempson's various Tomorrow themes"tar])(cl-format .[(1 1)()"CL format routine."tar])(color-theme-cobalt .[(0 0 2)((color-theme (6 6 1)))"Cobalt Color Theme for Emacs"single])(ctags-update .[(0 1 2)()"auto update TAGS in parent directory using exuberant-ctags -*- coding:utf-8 -*-"single])(peep-open .[(0 0 2)()"PeepOpen plugin for emacs."single])(org-mime .[(20120112)()"org html export for text/html MIME emails"single])(eh-basic .[(0 0 2)((starter-kit (2 0 2)) (browse-kill-ring (1 3 1)))"tuamshu's emacs basic configure"tar])(eh-gnus .[(0 0 6)()"tuamshu's gnus configure"tar])(eh-functions .[(0 0 1)((starter-kit (2 0 2)))"tuamshu's emacs functions"tar])(eh-keybindings .[(0 0 1)((eh-functions (0 0 1)) (starter-kit-bindings (2 0 2)))"tuamshu's emacs keybindings"tar])(magit-gh-pulls .[(0 3)((gh (0 4 3)) (magit (1 1 0)))"GitHub pull requests extension for Magit"single])(highlight-80+ .[(1 0)()"highlight characters beyond column 80"single])(jump-char .[(0 1)()"navigation by char"single])(color-theme-molokai .[(0 1)()"Molokai color theme by Lloyd"single])(pointback .[(0 2)()"Restore window points when returning to buffers"single])(uci-mode .[(1 0 0)()"Major mode for UCI configuration files"single])(erlang .[(2 4 1)()"Major modes for editing and running Erlang"single])(thumb-through .[(0 3)()"Plain text reader of HTML documents"single])(unbound .[(0 1)()"find convenient unbound keystrokes"single])(ido-better-flex .[(0 0 2)()"A better flex (fuzzy) algorithm for Ido."single])(slim-mode .[(1 1)()"Major mode for editing Slim files"single])(flymake .[(0 4 16)()"a universal on-the-fly syntax checker"single])(popup .[(0 5)()"Visual Popup User Interface"single])(fancy-mode .[(0 1)()"Major mode for programming with the Fancy language."single])(haxe-mode .[(0 3 1)()"An Emacs major mode for haXe"single])(expand-region .[(0 10 0)()"Increase selected region by semantic units."tar])(ack-and-a-half .[(1 2 0)()"Yet another front-end for ack"single])(test-case-mode .[(0 1 9)()"unit test front-end"single])(multi-eshell .[(0 0 1)()"makes it easier to use multiple shells within emacs"single])(mo-git-blame .[(0 1 0)()"An interactive, iterative 'git blame' mode for Emacs"single])(slime-js .[(0 0 1)((slime-repl (20100404)) (slime (20100404)))"Slime extension for swank-js."single])(volatile-highlights .[(1 10)()"Minor mode for visual feedback on some operations."single])(smooth-scroll .[(1 2)()"Minor mode for smooth scrolling and in-place scrolling."single])(xlicense .[(1 1)()"Insert pre-defined license text"tar])(flymake-d .[(0 1)()"A flymake handler for d-mode files"single])(flymake-tuareg .[(0 1)()"A flymake handler for tuareg-mode files"tar])(track-closed-files .[(0 1)()"Keep track of recently closed files"single])(color-theme-monokai .[(0 0 5)((color-theme (6 5 5)))"Monokai Color Theme for Emacs."single])(drupal-mode .[(0 5 0)((php-mode (1 5 0)))"Advanced minor mode for Drupal development"tar])(screen-lines .[(0 55)()"a minor mode for screen-line-based point motion"single])(ctypes .[(1 2)()"Enhanced Font lock support for custom defined types."single])(moinmoin-mode .[(1 0)((screen-lines (0 55)))"a major mode to edit MoinMoin wiki pages"single])(pc-mode .[(0 1)()"major mode for editing PC code,"single])(mediawiki .[(2 2 3)()"mediawiki frontend"single])(workspaces .[(0 1)()"Workspaces for Emacsen "single])(pivotal-tracker .[(1 2 0)()"Interact with Pivotal Tracker through its API"single])(tron-theme .[(12)()"A theme loosely based on Tron: Legacy colors"single])(sublime .[(0 0 7)((coffee-mode (0 3 0)) (find-file-in-project (3 0)) (haml-mode (3 0 14)) (ido-ubiquitous (1 0)) (less-css-mode (0 6)) (magit (1 1 1)) (markdown-mode (1 8 1)) (monokai-theme (0 0 6)) (paredit (22)) (sass-mode (3 0 14)) (smex (1 1 2)) (yaml-mode (0 0 7)) (yasnippet (0 6 1)))"REQUIRES EMACS 24 - Sublime Text 2 Emulation for Emacs"tar])(logito .[(0 1)((eieio (1 3)))"logging library for Emacs"single])(jade-mode .[(0 1)()"Major mode for editing jade templates."single])(stylus-mode .[(0 1)()"Major mode for editing stylus templates."single])(sws-mode .[(0 1)()"SWS mode"single])(ess-smart-underscore .[(0 79)()"Ess Smart Underscore"single])(ghci-completion .[(0 1 3)()"Completion for GHCi commands in inferior-haskell buffers -*- lexical-binding: t; -*-"single])(javap .[(8)()"Javap major mode"single])(javap-mode .[(9)()"Javap major mode"single])(anything-show-completion .[(20091119)()"Show selection in buffer for anything completion"single])(pastels-on-dark-theme .[(0 3)()"Pastels on Dark theme for Emacs 24"single])(color-theme-solarized .[(20120301)()"Solarized themes for Emacs"tar])(image-dired+ .[(0 6 0)()"Image-dired extensions"single])(deferred .[(0 3 1)()"Simple asynchronous functions for emacs lisp"single])(concurrent .[(0 3 1)((deferred (0 3 1)))"Concurrent utility functions for emacs lisp"single])(ctable .[(0 1 1)()"Table component for Emacs Lisp"single])(epc .[(0 1 1)((concurrent (0 3 1)) (ctable (0 1 1)))"A RPC stack for the Emacs Lisp"single])(edbi .[(0 1 1)((concurrent (0 3 1)) (ctable (0 1 1)) (epc (0 1 1)))"Emacs Database Interface"tar])(color-theme .[(6 5 5)()"install color themes"single])(cacoo .[(2 1 2)((concurrent (0 3 1)))"Minor mode for Cacoo : http://cacoo.com"tar])(imgur .[(0 1)((anything (1 287)))"imgur client for Emacs"single])(tango-2-theme .[(1 0 0)()"Tango 2 color theme for GNU Emacs 24"single])(po.foo .[(3 0 20)((haml-mode (3 0 20)))"Sass major mode"single])(po.elscreen .[(1 4 6)()" Screen for Emacsen(this is not original)"single])(po-elscreen .[(1 4 6)()" Screen for Emacsen(this is not original. original is http://www.morishima.net/~naoto/elscreen-en/?lang=en)"single])(quack .[(0 42)()"enhanced support for editing and running Scheme code"single])(dired+ .[(21 2)()"Extensions to Dired."single])(evil-leader .[(0 4 1)((evil (0)))"let there be <leader>"single])(rspec-mode .[(1 7)((ruby-mode (1 0)))"Enhance ruby-mode for RSpec"single])(emstar .[(1 4)()"Casual game, like a brainy Pac-Man"tar])(igrep .[(2 113)()"An improved interface to `grep` and `find`"single])(cljdoc .[(0 1 0)()"eldoc mode for clojure"single])(real-auto-save .[(0 3)()"enable real auto save"single])(monokai-theme .[(0 0 11)()"REQUIRES EMACS 24: Monokai Color Theme for Emacs."single])(wrap-region .[(0 7 1)()"Wrap text with punctation or tag"single])(fuzzy .[(0 1)()"Fuzzy Matching"single])(auto-complete .[(1 4)((popup (0 5)))"Auto Completion for GNU Emacs"tar])(bitlbee .[(1 0)()"Help get Bitlbee (http://www.bitlbee.org) up and running"single])(lorem-ipsum .[(0 1)()"Insert dummy pseudo Latin text."single])(typopunct .[(1 0)()"Automatic typographical punctuation marks"single])(twittering-mode .[(2 0 0)()"Major mode for Twitter"single])(flymake-phpcs .[(1 0 5)((flymake (0 3)))"Flymake handler for PHP to invoke PHP-CodeSniffer"tar])(flex-autopair .[(0 3)()"Automatically insert pair braces and quotes, insertion conditions & actions are highly customizable."single])(color-theme-dawn-night .[(1 0)()"color theme of dawn and night."single])(weather .[(2012 3 27 2)()"Get weather reports via worldweatheronline.com"single])(flymake-perlcritic .[(1 0 3)((flymake (0 3)))"Flymake handler for Perl to invoke Perl::Critic"tar])(jsshell-bundle .[(2012 4 7)()"JSShell generated bundle"single])(rfringe .[(1 0 1)()"indicate relative locations in the fringe"single])(flyphpcs .[(1 0 1)()"Flymake for PHP via PHP-CodeSniffer"single])(defaultcontent .[(1 4)()"a templating tool. Fill new files with default content."single])(flymake-for-jslint-for-wsh .[(1 3 0)((flymake (0 3)))"use flymake with js code, on Windows"single])(tfs .[(0 2 7)()"MS Team Foundation Server commands for Emacs."single])(dropdown-list .[(1 45)()"Drop-down menu interface"single])(thesaurus .[(2012 4 7)()"replace a word with a synonym looked up in a web service."single])(fly-jshint-wsh .[(2 0 3)((flymake (0 3)))"use flymake with jshint on js code, on Windows"single])(watch-buffer .[(1 0 1)()"run a shell command when saving a buffer"single])(smarter-compile .[(2012 4 9)()"a smarter wrapper for `compile'"single])(hungry-delete .[(1 0)()"hungry delete minor mode"single])(align-cljlet .[(0 3)((clojure-mode (1 11 5)))"Space align various Clojure forms "single])(idomenu .[(0 1)()"imenu tag selection with ido"single])(drag-stuff .[(0 0 4)()"Drag stuff (lines, words, region, etc...) around"single])(w32-registry .[(2012 4 6)()"read the registry from elisp"single])(jsshell .[(2012 4 7)()"Run a javascript command interpreter in emacs on Windows."single])(shadchen .[(1 0)()"pattern matching for elisp"single])(cycbuf .[(0 5 0)()"Cycle buffers code by Martin Pohlack, inspired by"single])(yascroll .[(0 2 0)()"Yet Another Scroll Bar Mode"single])(anything-exuberant-ctags .[(0 1 2)()"Exuberant ctags anything.el interface"single])(ess .[(5 14)()"Edit and interact with statistical programs like R, S-Plus, SAS, Stata and JAGS"tar])(anything-git-goto .[(0 1 0)()"Quick listing of:"single])(expectations-mode .[(0 0 4)((nrepl (0 1 5)) (clojure-mode (1 11)))"Minor mode for expectations tests"single])(twilight-theme .[(1 0 0)()"Twilight theme for GNU Emacs 24 (deftheme)"single])(jtags .[(0 97)()"enhanced tags functionality for Java development"single])(jtags-extras .[(0 3 0)()"jtags related functionality for Java development"single])(phantomjs .[(0 0 11)()"Control phantomjs from Emacs			"tar])(oz .[(16513)()"Major mode for editing Oz programs"tar])(load-theme-buffer-local .[(0 0 2)()"Install emacs24 color themes by buffer."single])(color-theme-buffer-local .[(0 0 2)()"Install color-themes by buffer."single])(elisp-depend .[(1 0 2)()"Parse depend libraries of elisp file."single])(key-chord .[(0 5 20080915)()"map pairs of simultaneously pressed keys to commands"single])(shell-here .[(1 1)()"Open a shell relative to the working directory"single])(symbols-mode .[(0 3)()"List symbols of object files"single])(handlebars-mode .[(1 3)()"A major mode for editing Handlebars files."single])(dircmp .[(1)()"Compare and sync directories."single])(ascii .[(3 1)()"ASCII code display."single])(frame-tag .[(0 1 0)()"Minor mode that assigns a unique number to each frame for easy switching"single])(org-blog .[(1 18 1 1)()"create and publish a blog with org-mode"single])(ruby-tools .[(0 1 0)()"Collection of handy functions for ruby-mode"single])(unfill .[(0 1)()"The inverse of fill-paragraph and fill-region"single])(modeline-posn .[(22 0)()"Set up `mode-line-position'."single])(mark-multiple .[(1 0)()"A library that sorta lets you mark several regions at once"single])(mark-more-like-this .[(1 0)()"Mark additional regions in buffer matching current region."single])(openwith .[(20120531)()"Open files with external programs"single])(isearch+ .[(21 0)()"Extensions to `isearch.el'."single])(mouse+ .[(21 0)()"Extensions to `mouse.el'."single])(zencoding-mode .[(0 5 1)()"Unfold CSS-selector-like expressions to markup"single])(smart-mode-line .[(1 7 1)()"A color coded smart mode-line."single])(nyan-mode .[(0 1)()"Nyan Cat shows position in current buffer in mode-line."single])(ujelly-theme .[(1 0 35)()"Ujelly theme for GNU Emacs 24 (deftheme)"single])(zen-and-art-theme .[(1 0 1)()"zen and art color theme for GNU Emacs 24"single])(git-auto-commit-mode .[(4 2 2)()"Emacs Minor mode to automatically commit and push"single])(haste .[(1)((json (1 2)))"Emacs client for hastebin (http://hastebin.com/about.md)"single])(my-packages .[(0 1 0)()"Package Initialization."single])(zen-mode .[(20120627)()"remove/restore Emacs distractions quickly"tar])(heroku .[(1 1 0)()"Interface to Heroku apps."single])(repository-root .[(1 0 4)()"deduce the repository root directory for a given file"single])(grep-a-lot .[(1 0 7)()"manages multiple search results buffers for grep.el"single])(grep-o-matic .[(1 0 6)()"auto grep word under cursor"single])(el-spec .[(0 2)()"ruby's rspec like syntax test frame work"single])(wc-mode .[(1 3)()"Running word count with goals (minor mode)"single])(legalese .[(1 0)()"Add legalese to your program files"single])(scad-mode .[(90 0)()"SCAD mode derived mode"single])(ttl-mode .[(0 1)()"mode for Turtle(RDF)"single])(zeitgeist .[(0 1)()"integrates Emacs with Zeitgeist."single])(dispass .[(1 1 2)()"Emacs wrapper for DisPass"single])(writegood-mode .[(20130406 2316)()"Polish up poor writing on the fly"single])(nrepl .[(0 2 0)((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 1 0)) (pkg-info (0 1)))"Client for Clojure nREPL"single])(shell-switcher .[(0 1 5 1)()"Easily switch between shell buffers, like with alt+tab."tar])(github-theme .[(0 0 3)()"Github color theme for GNU Emacs 24"single])(sokoban .[(1 23)()"Play the Sokoban game in emacs"single])(package-store .[(0 3)()"a package cache"single])(code-headers .[(0 7)()"Navigate code with headers embedded in comments.  -*- mode: Emacs-Lisp; lexical-binding: t; -*"single])(dix .[(0 1 0)()"minor mode for editing Apertium XML dictionary files"single])(no-easy-keys .[(1 0 2)()"Learn the proper Emacs movement keys"single])(makefile-runner .[(1 1 2)()"Searches for Makefile and fetches targets"single])(gnusnotes .[(0 9 2)()"Adding per-message notes in gnus summary buffer"single])(eredis .[(0 5 0)()"eredis, a Redis client in emacs lisp"single])(org-readme .[(20130322 926)((http-post-simple (1 0)) (yaoddmuse (0 1 1)) (header2 (21 0)) (lib-requires (21 0)))"Integrates Readme.org and Commentary/Change-logs."single])(egison-mode .[(0 1 4)()"Egison editing mode"single])(mongo .[(0 5)()"A MongoDB client."tar])(cm-mode .[(0 1 0)()"Wrapper for CodeMirror-style Emacs modes"single])(marmalade-test .[(0 0 1)()"A test tarball package."tar])(ruby-mode .[(1 1)()"ruby-mode package"tar])(hjkl-mode .[(0 1)((key-chord (0 5)))"import some vim's key bindings"tar])(edit-list .[(0 4)()"edit a single list"single])(persistent-soft .[(0 8 8)((pcache (0 2 3)) (list-utils (0 4 2)))"Persistent storage, returning nil on failure"single])(hippie-namespace .[(0 5 8)()"Special treatment for namespace prefixes in hippie-expand"single])(nav-flash .[(1 1 0)()"Briefly highlight the current line"single])(ucs-utils .[(0 7 6)((persistent-soft (0 8 8)) (pcache (0 2 3)))"Utilities for Unicode characters"single])(back-button .[(0 6 6)((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (persistent-soft (0 8 8)) (pcache (0 2 3)))"Visual navigation through mark rings"single])(xml-gen .[(0 4)()"A DSL for generating XML."single])(yaoddmuse .[(0 1 1)()"Yet another oddmuse for Emacs"single])(window-end-visible .[(0 1 0)()"Find the last visible point in a window"single])(string-utils .[(0 3 2)((list-utils (0 4 2)))"String-manipulation utilities"single])(unicode-enbox .[(0 1 4)((string-utils (0 3 2)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3)))"Surround a string with box-drawing characters"single])(dynamic-fonts .[(0 6 4)((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3)))"Set faces based on available fonts"single])(minimal-session-saver .[(0 6 2)()"Very lean session saver"single])(unicode-progress-reporter .[(0 5 4)((emacs (24 1 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3)))"Progress-reporter with fancy characters"single])(unicode-fonts .[(0 3 8)((font-utils (0 7 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3)))"Configure Unicode fonts"single])(jump .[(2 3)((findr (0 7)) (inflections (1 1)))"build functions which contextually jump between files"single])(mongo-elnode .[(0 5 0)((mongo (0 5)) (elnode (0 9 9)))"elnode adapter for mongo-el"single])(dotassoc .[(0 0 1)()"dot access embedded alists"single])(eimp .[(1 4 0)()"Emacs Image Manipulation Package"single])(org-presie .[(0 0 5)((framesize (0 0 1)) (eimp (1 4 0)) (org (7 8 9)))"simple presentation with an org file"single])(ido-load-library .[(0 2 0)((persistent-soft (0 8 8)) (pcache (0 2 3)))"Load-library alternative using ido-completing-read"single])(esxml .[(0 3 0)((db (0 0 1)))"Handle HTML with lists."tar])(ac-nrepl .[(0 21)((cider (0 1)) (auto-complete (1 4)))"auto-complete sources for Clojure using nrepl completions"single])(unicode-whitespace .[(0 2 4)((ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3)))"teach whitespace-mode about fancy characters"single])(ecb-snapshot .[(20120830)()"Emacs Code Browser CVS snapshot"tar])(pabbrev .[(3 1)()"Predictive abbreviation expansion"single])(applescript-mode .[(1 1)()"major mode for editing AppleScript source"single])(ssh .[(1 2)()"Support for remote logins using ssh."single])(nrepl-ritz .[(0 6 0)((nrepl (0 1 5)))"nrepl extensions for ritz"single])(doctags .[(0 1)()"Generation of tags documentation in Doxygen syntax"single])(ignoramus .[(0 7 0)()"Ignore backups, build files, et al."single])(flyspell-lazy .[(0 6 6)()"Improve flyspell responsiveness using idle timers"single])(buffer-utils .[(0 1 0)()"Buffer-manipulation utility functions"single])(browse-url-dwim .[(0 6 6)((string-utils (0 3 2)))"Context-sensitive external browse URL or Internet search"single])(fixmee .[(0 8 4)((button-lock (1 0 0)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0)))"Quickly navigate to FIXME notices in code"single])(kv .[(0 0 19)()"key/value data structure functions"single])(lisp-editing .[(0 0 5)()"lisp editing tools"single])(oauth .[(1 0 3)()"An Emacs oauth client. See https://github.com/psanford/emacs-oauth/"tar])(tumblesocks .[(0 0 7)((htmlize (1 39)) (oauth (1 0 3)) (markdown-mode (1 8 1)))"An Emacs tumblr client."tar])(uuid .[(0 0 3)()"UUID's for EmacsLisp"single])(pcmpl-args .[(0 1 1)()"Enhanced shell command completion    -*- lexical-binding: t -*-"single])(anaphora .[(1 0 0)()"anaphoric macros providing implicit temp variables"single])(exec-path-from-shell .[(1 7)()"Get environment variables such as $PATH from the shell"single])(rcirc-ssh .[(0 0 7)((kv (0 0 3)))"do irc over ssh sessions -*- lexical-binding: t -*-"single])(go-play .[(0 0 1)()"Paste to play.golang.org"single])(yagist .[(0 8 6)((json (1 2 0)))"Yet Another Emacs integration for gist.github.com"single])(list-utils .[(0 4 2)()"List-manipulation utility functions"single])(margo .[(2012 9 18)((web (0 1 8)) (json (1 2)))"Client for MarGo, providing Go utilities"single])(shoes-off .[(0 1 8)((kv (0 0 5)) (anaphora (0 0 4)))"irc bouncer"single])(multiple-cursors .[(1 3 0)()"Multiple cursors for Emacs."tar])(pcre2el .[(1 5)((cl-lib (0 3)))"parse, convert, and font-lock PCRE, Emacs and rx regexps"single])(eshell-manual .[(0 0 2)()"An updated manual for Eshell."tar])(font-utils .[(0 7 0)((persistent-soft (0 8 8)) (pcache (0 2 3)))"Utility functions for working with fonts"single])(rcirc-robots .[(0 0 7)((kv (0 0 8)) (anaphora (0 0 5)))"robots based on rcirc irc -*- lexical-binding: t -*-"single])(plantuml-mode .[(0 2)()"Major mode for plantuml"single])(org-ehtml .[(0 20131014)((elnode (20130416 1626)) (org-plus-contrib (20131007)))"Export Org-mode files as editable web pages"tar])(esk .[(0 1)()"Emacs Search Kit - An easy way to find files and/or strings in a project"tar])(hide-comnt .[(40)()"Hide/show comments in code."tar])(pretty-mode-plus .[(1 0)()"Redisplay parts of the buffer as pretty symbols."tar])(s .[(1 9 0)()"The long lost Emacs string manipulation library."single])(sprintly-mode .[(0 0 4)((furl (0 0 2)))"Major mode for dealing with sprint.ly"single])(git-commit-mode .[(0 13)()"Major mode for editing git commit messages -*- lexical-binding: t; -*-"single])(db .[(0 0 6)((kv (0 0 11)))"A database for EmacsLisp  -*- lexical-binding: t -*-"single])(notmuch-labeler .[(0 1)()"Improves notmuch way of displaying labels through fonts, pictures, and hyperlinks."tar])(text-language .[(0 20121008)()"tracking, setting, guessing language of text"single])(gitignore-mode .[(0 1)()"Major mode for editing .gitconfig files"single])(typo .[(1 1)()"Minor mode for typographic editing"single])(ws-trim .[(1 4)()"Tools and minor mode to trim whitespace on text lines"single])(flymake-checkers .[(0 2)()"Flymake reloaded with useful checkers"single])(hardhat .[(0 4 2)((ignoramus (0 7 0)))"Protect against clobbering user-writable files"single])(save-packages .[(0 20121012)()"save and restore installed packages"single])(smooth-scrolling .[(1 0 1)()"Make emacs scroll smoothly"single])(flymake-go .[(2013 3 14)((flymake (0 4 13)))"A flymake handler for go-mode files"single])(cmake-project .[(0 7)()"Integrates CMake build process with Emacs"single])(combinators .[(0 0 1)()"-*- lexical-binding: t; -*-"single])(gitty .[(1 0)()"vc-mode extension for fast git interaction"single])(mote-mode .[(1 0 0)((ruby-mode (1 1)))"Mote minor mode"single])(hideshowvis .[(0 5)()"Add markers to the fringe for regions foldable by hideshow.el"single])(inflections .[(1 1)()"convert english words between singular and plural"single])(findr .[(0 7)()"Breadth-first file-finding facility for (X)Emacs"single])(livescript-mode .[(0 0 1)()"Major mode for LiveScript files in Emacs"single])(smart-forward .[(1 0 0)((expand-region (0 8 0)))"Semantic navigatioin"single])(osx-browse .[(0 8 8)((string-utils (0 3 2)) (browse-url-dwim (0 6 6)))"Web browsing helpers for OS X"single])(cljsbuild-mode .[(0 2 0)()"A minor mode for the ClojureScript 'lein cljsbuild' command"single])(vector-utils .[(0 1 2)()"Vector-manipulation utility functions"single])(config-block .[(0 0 1)()"config-block is utility for individual settings (e.g. .emacs)."single])(visible-color-code .[(0 0 1)()"color code strings in current buffer, this elisp show you one as real color."single])(namakemono .[(0 0 1)()"utility function set for namakemono"single])(bang .[(0 1 0)()"A modern list library for Emacs"single])(roy-mode .[(0 1 0)()"Roy major mode"single])(wgrep-ack .[(0 1 1)((wgrep (2 1 1)))"Writable ack-and-a-half buffer and apply the changes to files"single])(flymake-lua .[(1 0)()"Flymake for Lua"single])(dash .[(2 5 0)()"A modern list library for Emacs"single])(inform-mode .[(1 6 2)()"Major mode for Inform 6 interactive fiction code"single])(octomacs .[(0 0 1)()"Octopress interface for Emacs"single])(highlight .[(21 0)()"Highlighting commands."single])(region-list-edit .[(20100530 808)()"Add/delete a region into/from a region list, such as ‘((4 . 7) (11 . 15) (17 . 17) (20 . 25))."single])(zjl-hl .[(20121028 1901)((highlight (21 0)) (region-list-edit (20100530 808)))"Highlight variable and function call and others in c/emacs, make life easy."single])(truthy .[(0 2 8)((list-utils (0 4 2)))"Test the content of a value"single])(syntactic-sugar .[(0 9 4)()"Effect-free forms such as if/then/else"single])(elpakit .[(1 0 7)((anaphora (0 0 6)) (dash (1 0 3)))"package archive builder"single])(bug-reference-github .[(0 2 0)()"Automatically set `bug-reference-url-format' in Github repositories."single])(macrostep .[(0 6)()"interactive macro stepper for Emacs Lisp"single])(qsimpleq-theme .[(0 1 3)()"Based on solarized color theme for Emacs."single])(flymake-easy .[(0 9)()"Helpers for easily building flymake checkers"single])(seclusion-mode .[(1 1 1)()"Edit in seclusion. A Dark Room mode."single])(skinny .[(0 0 6)((elnode (0 9 9 6 1)) (creole (0 8 17)))"a blog engine with elnode -*- lexical-binding: t -*-"single])(flymake-python-pyflakes .[(0 9)((flymake-easy (0 8)))"A flymake handler for python-mode files using pyflakes (or flake8)"single])(pyvirtualenv .[(1 1)()"Python Pyvirtualenv support"single])(find-file-in-repository .[(1 3)()"Quickly find files in a git, mercurial or other repository"single])(page-break-lines .[(0 9)()"Display ugly ^L page breaks as tidy horizontal lines"single])(paredit-menu .[(1 0)()"Adds a menu to paredit.el as memory aid"single])(elpy .[(1 2 1)((auto-complete (1 4)) (find-file-in-project (3 2)) (fuzzy (0 1)) (highlight-indentation (0 5 0)) (idomenu (0 1)) (iedit (0 97)) (nose (0 1 1)) (virtualenv (1 2)) (yasnippet (0 8 0)))"Emacs Python Development Environment"tar])(ace-jump-mode .[(2 0 0 0)()"a quick cursor location minor mode for emacs -*- coding: utf-8-unix -*-"single])(osx-location .[(0 2)()"Watch and respond to changes in geographical location on OS X"tar])(elpa-audit .[(0 4)()"Handy functions for inspecting and comparing package archives"single])(pde .[(0 2 16)()"Perl Development Environment"tar])(tt-mode .[(20121117 2045)()"Emacs major mode for editing Template Toolkit files."tar])(pod-mode .[(20121117 2120)()"Major mode for editing .pod-files."tar])(multi-web-mode .[(0 1)()"multiple major mode support for web editing"single])(chicken-scheme .[(1 1 0)()"Scheme-mode extensions for Chicken Scheme"single])(minimap .[(1 0)()"Sidebar showing a \"mini-map\" of a buffer"single])(session-manager .[(0 5)()"Support for the Gnome Session Manager"single])(ercn .[(1 0 2)()"Flexible ERC notifications"single])(grr .[(1 0 0)()"Simple Growl notifications for Emacs and Mac OS X"single])(simpleclip .[(1 0 0)()"Simplified access to the system clipboard"single])(bufshow .[(0 1 0)()"A simple presentation tool for Emacs."tar])(lcs .[(1 1)()"find out the longest common sequence"single])(tracking .[(1 4)((shorten (0 3)))"Buffer modification tracking"single])(lui .[(1 3)((tracking (1 4)))"Linewise User Interface"tar])(circe .[(1 3)((lui (1 3)) (lcs (1 1)))"Client for IRC in Emacs"tar])(iedit .[(0 97)()"Edit multiple regions in the same way simultaneously."tar])(let-recur .[(0 0 5)()"Simplified implementation of recur -*- lexical-binding:t -*-"single])(wgrep-helm .[(0 1 0)((wgrep (2 1 1)))"Writable helm-grep-mode buffer and apply the changes to files"single])(otter-mode .[(1 2)()"Major mode for source files of the Otter automated theorem prover"single])(sql-indent .[(1 10)()"indentation of SQL statements"single])(parenface-plus .[(1 1)()"Provide a face for parens in lispy modes."tar])(huskie .[(0 0 2)((anaphora (0 0 6)))"chainsaw powered logging"single])(color-theme-x .[(1 3)()"convert color themes to X11 resource settings"single])(systemtap-mode .[(0 2)()"A mode for SystemTap"single])(gplusify .[(1 0)()"Add Google Plus markup to a piece of code"single])(diatheke .[(1 0)()"A minor mode using the diatheke command-line Bible tool"single])(extend-dnd .[(0 5)()"R drag and Drop"single])(wxwidgets-help .[(0 0 3)()"Look up wxWidgets API by using local html manual."tar])(sudden-death .[(0 2)()"Totsuzen-no-Shi"single])(fold-this .[(0 1 0)()"Just fold this region please"single])(subshell-proc .[(0 2)()"Functions for working with comints"single])(pg .[(0 12)()"Emacs Lisp interface to the PostgreSQL RDBMS"single])(db-pg .[(0 0 3)((pg (0 12)) (db (0 0 6)))"A PostgreSQL adapter for emacs-db"single])(el-x .[(0 3 0)((cl-lib (0 2)))"Emacs-lisp extensions."tar])(hippie-expand-haskell .[(0 0 1)()"Hippie expand try function using ghc's completion function."single])(slamhound .[(2 0 0)()"Rip Clojure namespaces apart and rebuild them."single])(late-night-theme .[(0 0)()"Late Night theme for Emacs 24"single])(creole-mode .[(0 0 5)()"a markup mode for creole"single])(evil-paredit .[(0 0 1)((evil (0 0 0)) (paredit (1)))"Paredit support for evil keybindings"single])(websocket .[(1 0)()"Emacs WebSocket client and server"single])(robe .[(0 7 7)((inf-ruby (2 3 0)))"Code navigation, documentation lookup and completion for Ruby"tar])(dropbox .[(0 9 1)((json (1 2)) (oauth (1 0 3)))"Emacs backend for dropbox"single])(simple-mode-line .[(0 3)()"Simplified Mode Line for Emacs 24"single])(pov-mode .[(3 3)()"Major mode for editing POV-Ray scene files."tar])(tup-mode .[(1 2)()"Major mode for editing files for Tup"single])(bbcode-mode .[(1 1 0)()"Major mode for writing BBCode markup"single])(markup-faces .[(1 0 0)()"collection of faces for markup language modes"single])(flymake-json .[(0 1)((flymake-easy (0 1)))"A flymake handler for json using jsonlint"single])(adoc-mode .[(0 6 2)((markup-faces (1 0 0)))"a major-mode for editing AsciiDoc files in Emacs"single])(hardcore-mode .[(1 0 0)()"Disable arrow keys + optionally backspace and return"single])(spotify .[(0 2)()"Control the spotify application from emacs"single])(buffer-stack .[(1 5)()"Enhanced intelligent switch-to-other-buffer replacement."single])(hlinum .[(1 0)()"Extension for linum.el to highlight current line number"single])(aes .[(0 5)()"Implementation of AES"single])(kpm-list .[(1 0)()"An emacs buffer list that tries to intelligently group together buffers."single])(kwin .[(0 1)()"communcate with the KWin window manager"single])(clj-refactor .[(0 10 0)((s (1 8 0)) (dash (2 4 0)) (yasnippet (0 6 1)) (paredit (22)) (multiple-cursors (1 2 2)))"A collection of clojure refactoring functions"single])(nemerle .[(0 2)()"major mode for editing nemerle programs"single])(ag .[(0 42)()"A front-end for ag ('the silver searcher'), the C ack replacement."single])(nimrod-mode .[(0 1 5)((auto-complete (1 4)))"A major mode for the Nimrod programming language"single])(gnomenm .[(0 0 3)()"Emacs interface to Gnome nmcli command"single])(sequence .[(0 0 1)()"makes sequences of numbers -*- lexical-binding: t -*-"single])(rbenv .[(0 0 3)()"Emacs integration for rbenv"single])(evil .[(1 0 8)((undo-tree (0 6 3)) (goto-last-change (1 2)))"Extensible Vi layer for Emacs."tar])(world-time-mode .[(0 0 2)()"show whole days of world-time diffs"single])(inline-crypt .[(0 1 4)()"Simple inline encryption via openssl"tar])(tagedit .[(1 4 0)((s (1 3 1)) (dash (1 0 3)))"Some paredit-like features for html-mode"single])(vertica .[(0 1 0)((sql (3 0)))"Vertica SQL mode extension"single])(hive .[(0 1 1)((sql (3 0)))"Hive SQL mode extension"single])(smart-window .[(0 6)()"vim-like window controlling plugin"single])(requirejs-mode .[(1 1)()"Improved AMD module management"single])(soothe-theme .[(0 3 16)((emacs (24 1)))"a dark colorful theme for Emacs24."single])(purple-haze-theme .[(20130930 36)((emacs (24 0)))"an overtly purple color theme for Emacs24."single])(gruber-darker-theme .[(0 6)()"Gruber Darker color theme for Emacs 24."single])(rust-mode .[(0 1 0)((cm-mode (0 1 0)))"A major emacs mode for editing Rust source code"single])(framesize .[(0 0 5)((key-chord (0 5 20080915)))"change the size of frames in Emacs"single])(deep-thought-theme .[(0 1 1)()"Emacs 24 theme with the Answer to The Ultimate Question"single])(generate-autoloads .[(0 0 10)()"A package to help you lazy-load everything"single])(lisp-infection .[(0 0 10)()"Commands to *enhance* S-exp editing"single])(backtrace-mode .[(0 0 10)()"A better way to browse /var/log/messages files"single])(tabulated-list .[(0)()"generic major mode for tabulated lists."single])(ert .[(0)()"Emacs Lisp Regression Testing"single])(macro-utils .[(1 0)()"Utilities for writing macros."single])(nurumacs .[(3 4 1)()"smooth-scrolling and minimap"single])(mark-tools .[(0 3)()"Some simple tools to access the mark-ring in Emacs"single])(weechat .[(0 2)((s (1 3 1)) (cl-lib (0 2)) (emacs (24)) (tracking (1 2)))"Chat via WeeChat's relay protocol in Emacs"tar])(todotxt .[(0 2 3)()"A major mode for editing todo.txt files"single])(toml-mode .[(0 1 3)()"Mojor mode for editing TOML files"single])(git-gutter .[(0 42)()"Port of Sublime Text plugin GitGutter"single])(vimrc-mode .[(0 3 1)()"Major mode for vimrc files"single])(control-lock .[(1 1 2)()"Like caps-lock, but for your control key.  Give your pinky a rest!"single])(fic-ext-mode .[(0 1)()"Show FIXME/TODO/BUG(...) in special face only in comments and strings"single])(cups .[(0 1)()"CUPS features for Emacs"single])(vcard .[(0 1)()"vcard parsing and display routines"single])(babcore .[(0 0 5)()"Core Emacs configuration. This should be the minimum in every emacs config."single])(edebug-x .[(1 2)((dash (1 1 0)))"Extensions for Edebug"single])(cryptol-mode .[(0 1 0)()"Cryptol major mode for Emacs"single])(loop .[(1 1)()"friendly imperative loop structures"single])(tex-smart-umlauts .[(1 2 0)()"Smart umlaut conversion for TeX."single])(ht .[(1 5)()"The missing hash table library for Emacs"single])(flymake-hlint .[(0 2)((flymake-easy (0 1)))"A flymake handler for haskell-mode files using hlint"single])(pinboard .[(0 0 1)()"get stuff from pinboard -*- lexical-binding: t -*-"single])(isea .[(0 0 2)((elpakit (0 0 18)))"interactive server eval at mode, a comint for a daemonized emacs -*- lexical-binding: t -*-"single])(lexbind-mode .[(0 8)()"Puts the value of lexical-binding in the mode line"single])(auto-highlight-symbol .[(1 55)()"Automatic highlighting current symbol minor mode"single])(dot-mode .[(1 12)()"minor mode to repeat typing or commands"single])(sackspace .[(0 8 2)()"A better backspace"single])(main-line .[(1 2 8)()"modeline replacement forked from an early version of powerline.el"single])(show-css .[(1 1)()"Show the css of the html attribute the cursor is on"single])(supergenpass .[(0 1)()"SuperGenPass for Emacs"single])(with-namespace .[(1 1)()"Poor-man's namespaces for elisp"single])(flymake-haskell-multi .[(0 3)((flymake-easy (0 1)))"Syntax-check haskell-mode using both ghc and hlint"tar])(proc-net .[(0 0 1)()"network process tools"single])(drupal-spell .[(0 2 2)()"Aspell extra dictionary for Drupal"tar])(everything .[(0 1 5)()"Bridge to MS Windows desktop-search engine Everything"single])(thread-dump .[(1 0)()"java thread dump viewer"single])(bitly .[(1 0)()"Shorten URLs using the bitly.com shortener service"single])(grapnel .[(0 5 3)()"HTTP request lib with flexible callback dispatch"single])(tumble .[(1 5)()"an Tumblr mode for Emacs"single])(batch-mode .[(1 0)()"major mode for editing ESRI batch scrips"single])(rubyinterpol .[(0 1)()"Ruby-like String Interpolation for format"single])(smartparens .[(1 6 1)((cl-lib (0 1)) (dash (2 3 0)))"Automatic insertion, wrapping and paredit-like navigation with user defined pairs."tar])(latest-clojars .[(0 3)()"Clojure dependency resolver"single])(helm-gtags .[(0 9 2)((helm (1 0)))"GNU GLOBAL helm interface"single])(git-gutter-fringe .[(0 12)((git-gutter (0 42)) (fringe-helper (0 1 1)))"Fringe version of git-gutter.el"single])(center-text .[(0 8)()"Center the text in a fixed-width column"single])(ert-x .[(0)((ert (0)))"Staging area for experimental extensions to ERT"single])(clj-mode .[(0 9)()"basic Major mode (clj) for Clojure code"single])(color-theme-heroku .[(1 0 0)()"Heroku color theme"single])(ruby-hash-syntax .[(0 3)()"Toggle ruby hash syntax between classic and 1.9 styles"single])(psgml .[(1 4 1)()"Lennart Staflin's Psgml package, with Elisp syntax and sgml-validate fixed for Emacsen >=24."tar])(swarmhacker .[(0 0 1)()"simple swarm chat"single])(theme-changer .[(2 1 0)()"Sunrise/Sunset Theme Changer for Emacs"single])(ttrss .[(1 7 5)((emacs (23 1)))"Tiny Tiny RSS elisp bindings"single])(emacs-droid .[(0 0 0)()"Android application development tools for Emacs"single])(github-browse-file .[(0 3 0)()"View the file you're editing on GitHub"single])(sea-before-storm-theme .[(0 3)()"Sea Before Storm color theme for Emacs 24"single])(letcheck .[(0 2)()"Check the erroneous assignments in let forms"single])(clippy .[(1 0)((pos-tip (1 0)))"Show tooltip with function documentation at point"single])(kanban .[(0 1 2)()"Parse org-todo headlines to use org-tables as Kanban tables"single])(flymake-elixir .[(0 5)()"A flymake handler for elixir-mode .ex files.     "single])(surround .[(0 1)()"emulate surround.vim from Vim"single])(marmalade-service .[(2 0 9)((dash (1 1 0)) (s (1 6 0)) (elnode (0 9 9 6 10)))"The Marmalade package store service."tar])(rubocop .[(0 3)((dash (1 0 0)))"An Emacs interface for RuboCop"single])(lispyscript-mode .[(0 3 0)()"Major mode for LispyScript code."single])(indent-guide .[(1 0 1)()"show vertical lines to guide indentation"single])(toxi-theme .[(0 1 0)()"REQUIRES EMACS 24"single])(simplezen .[(0 1 1)()"A simple subset of zencoding-mode for Emacs."single])(helm-ag .[(0 4)((helm (1 0)))"the silver search with helm interface"single])(better-defaults .[(0 1 2)()"Fixing weird quirks and poor defaults"single])(typing-practice .[(0 1)()"Typing practice"single])(helm-projectile .[(0 10 0)((helm (1 4 0)) (projectile (0 10 0)))"Helm integration for Projectile"single])(perlbrew .[(0 1)((cl (0)))"basic support for perlbrew environments"single])(paredit-everywhere .[(0 3)((paredit (22)))"Enable some paredit features in non-lisp buffers"single])(string-edit .[(0 1 0)((dash (1 2 0)))"Avoid escape nightmares by editing string in separate buffer"single])(flycheck-color-mode-line .[(0 3)((flycheck (0 15)) (dash (1 2)) (emacs (24 1)))"Change mode line color with Flycheck status -*- lexical-binding: t -*-"single])(angular-snippets .[(0 2 3)((s (1 4 0)) (dash (1 2 0)))"Yasnippets for AngularJS"tar])(command-stats .[(0 1)()"Track frequency of commands executed in emacs"single])(stripe-buffer .[(0 2 2)((cl-lib (1 0)))"Use a different background for even and odd lines"single])(butler .[(0 2 0)((deferred (3 1)) (json (1 2)))"Emacs client for Jenkins"tar])(theme-park-mode .[(0 1 2)()"Take your themes for a ride!"single])(colour-region .[(0 4)()"Toggle regions of the buffer with different text snippets"single])(org-dotemacs .[(0 3)((org (7 9 3)) (cl-lib (1 0)))"Store your emacs config as an org file, and choose which bits to load."single])(fm .[(20130612 1)()"follow mode for compilation/output buffers"single])(bs-ext .[(0 2)()"Extensions to emacs buffer-selection library (bs.el)"single])(look-mode .[(1 0)()"quick file viewer for image and text file browsing"single])(look-dired .[(0 1)((look-mode (1 0)))"Extensions to look-mode for dired buffers"single])(dired-dups .[(0 3)()"Find duplicate files and display them in a dired buffer"single])(nzenburn-theme .[(20130513)()"A low contrast color theme for Emacs."single])(noflet .[(0 0 11)()"locally override functions"single])(simple-call-tree+ .[(1 3)()"Extensions to simple-call-tree"single])(eviews .[(0 1)()"Major-mode for editing eviews program files"single])(bbdb-ext .[(0 1)((bbdb (2 36)))"Extra commands for BBDB"single])(bar-cursor .[(1 1)()"package used to switch block cursor to a bar"single])(s-buffer .[(0 0 4)((s (1 6 0)) (noflet (0 0 3)))"s operations for buffers"single])(nodejs-repl .[(0 0 2 1)()"Run Node.js REPL"single])(fuzzy-format .[(0 1 1)()"select indent-tabs-mode and format code automatically."single])(psvn .[(1 1 1)()"Subversion interface for emacs"single])(javarun .[(0 1 1)()"Minor mode for quick development of Java programs"single])(slough .[(0 1)((nrepl (0 1 7)) (smartparens (1 4 3)))"package for slough - this is for a secret TW thing"single])(express .[(0 6 0)((string-utils (0 3 2)))"Alternatives to `message'"single])(fullscreen-mode .[(0 0 1)()"fullscreen window support for Emacs"single])(current-story .[(0 1 0)()"Track and insert current Pivotal Tracker"single])(kmacro-decision .[(1 5)((el-x (1 0)) (jb-misc-macros (0 2)))"Add conditional branching to keyboard macros"single])(jedi .[(0 1 2)((epc (0 1 0)) (auto-complete (1 4)))"Python auto-completion for Emacs"tar])(request .[(0 2 0)()"Compatible layer for URL request in Emacs"single])(request-deferred .[(0 2 0)((deferred (0 3 1)) (request (0 2 0)))"Wrap request.el by deferred"single])(show-marks .[(0 4)((fm (1 0)))"Navigate and visualize the mark-ring"single])(irfc .[(0 5 6)()"Interface for IETF RFC document."single])(apt-utils-ido .[(0 2)((apt-utils (1 212)))"Ido commands for apt-utils"single])(apt-utils .[(1 212)()"Emacs interface to APT (Debian package management)"single])(emms-mark-ext .[(0 3)((emms (3 0)))"Extra functions for emms-mark-mode and emms-tag-edit-mode"single])(emamux .[(0 1)()"Interact with tmux"single])(mustache .[(0 20)((ht (0 9)) (s (1 3 0)) (dash (1 2 0)))"a mustache templating library in emacs lisp"tar])(esup .[(0 3)()"the Emacs StartUp Profiler (ESUP)"single])(highlight-escape-sequences .[(0 1)()"Highlight escape sequences -*- lexical-binding: t -*-"single])(mode-icons .[(0 1 0)()"Show icons for modes"tar])(shorten .[(0 3)()"component-wise string shortener"single])(org-journal .[(1 4 6)()"a simple org-mode based journaling mode"single])(editorconfig .[(0 2)()"EditorConfig Emacs extension"single])(handlebars-sgml-mode .[(0 1 0)()"Add Handlebars contextual indenting support to sgml-mode"single])(flymake-less .[(0 3)((less-css-mode (0 15)))"Flymake handler for LESS stylesheets (lesscss.org)"single])(sawfish .[(1 32)()"Sawfish mode."single])(ob-sml .[(0 1)((sml-mode (6 4)))"org-babel functions for template evaluation"single])(dired-efap .[(0 8)()"Edit Filename At Point in a dired buffer"single])(occur-x .[(0 1 1)()"Extra functionality for occur"single])(scrolloff .[(1 0)()"This mode ofers vim-like scrolloff function"single])(issue-tracker .[(0 0 1)()"Poor man's issue tracker"tar])(ido-gnus .[(0 4)((gnus (5 13)))"Access gnus groups or servers using ido"single])(command-t .[(0 0 1)((find-file-in-project (3 2)) (popwin (0 4)))"Finds file in project using fuzzy search."single])(hide-lines .[(20130623 1701)()"Commands for hiding lines based on a regexp"single])(syslog-mode .[(2 2)((hide-lines (20130623)))"Major-mode for viewing log files"single])(jb-misc-macros .[(0 4)((macro-utils (1 0)))"Miscellaneous macros"single])(man-commands .[(1 1)()"Add interactive commands for every manpages installed in your computer."single])(cloud-to-butt-erc .[(1 0 0)()"Replace 'the cloud' with 'my butt'"single])(pager-default-keybindings .[(1 1)()"Add the default keybindings suggested for pager.el"single])(hook-utils .[(1 0)()"Add a few utility functions for manipulating hooks"single])(occur-default-current-word .[(1 0)()"Have M-x occur default to the word at point"single])(scratch-persist .[(1 1)()"persist the scratch buffer across sessions"single])(company-inf-ruby .[(0 2)((company (0 6 10)) (inf-ruby (2 2 7)))"company-mode completion back-end for inf-ruby"single])(frame-restore .[(0 4)((dash (1 2)) (f (0 11)) (emacs (24 1)))"Restore Emacs frame -*- lexical-binding: t; -*-"single])(debian-changelog-mode .[(1 96)()"major mode for Debian changelog files."single])(sourcetalk .[(1 1 0)((request (0 2 0)))"SourceTalk (http://sourcetalk.net) plugin for Emacs"single])(chm-view .[(0 2 2)()"View CHM file."single])(clues-theme .[(20130908 801)((emacs (24 0)))"an Emacs 24 theme which may well be fully awesome..."single])(assemblage-theme .[(20130715 621)()"a dark theme for Emacs 24"single])(parscope .[(0 1 0)()"Minor mode for showing the current scope in Lisp-like languages."single])(grizzl .[(0 1 1)((cl-lib (0 1)))"Fuzzy Search Library & Completing Read"tar])(flx .[(0 1)()"fuzzy matching with good sorting"single])(flx-ido .[(0 2)((flx (0 1)))"flx integration for ido"single])(parenface1.1 .[(1 1)()"Provide a face for parens in lisp modes."single])(git-gutter-fringe+ .[(0 0 2)((git-gutter+ (0 1)) (fringe-helper (20130519 1641)))"Fringe version of git-gutter+.el"single])(fringe-helper .[(1 0 1)()"helper functions for fringe bitmaps"single])(org-protocol-jekyll .[(0 1)()"Jekyll's handler for org-protocol"single])(gandalf-theme .[(0 1)()"Gandalf color theme"single])(processing-mode .[(1 2 1)()"Major mode for Processing 2.0"single])(gitconfig .[(1 0 0)()"Emacs lisp interface to work with git-config variables"single])(processing-snippets .[(1 0 0)((yasnippet (0 8 0)))"Snippets for the Processing major mode"tar])(rings .[(1 0 1)()"Buffer rings. Like tabs, but better."single])(nrepl-decompile .[(0 0 1)((nrepl (0 1 7)) (javap-mode (9)))"decompilation extension for nrepl.el"single])(pickup .[(0 0 3)()"pickup file. "single])(cubicle-mode .[(0 1)()"Cubicle major mode for emacs"single])(py-import-check .[(0 2)()"Finds the unused python imports using importchecker"single])(palimpsest .[(0 8)()"Various deletion strategies when editing"single])(flymake-puppet .[(1 0 0)((flymake-easy (0 9)))"An Emacs flymake handler for syntax-checking puppet using puppet-lint"single])(sparkline .[(0 3 0)()"Make sparkline images from a list of numbers"single])(wedge-ws .[(0 1 2)()"Wedge whitespace between columns in text"tar])(emmet-mode .[(1 0 5)()"Unofficial Emmet's support for emacs"single])(helm-delicious .[(1 3)()"helm extensions for delicious bookmarks"single])(tsql .[(1 0)()"customizes sql.el for T-SQL"single])(heroku-theme .[(1 1 0)()"Heroku color theme"single])(god-mode .[(2 12 0)()"God-like command entering minor mode"single])(helm-recoll .[(20130905 2330)((helm (1 5 4)))"helm interface for the recoll desktop search tool."single])(tronesque-theme .[(1 3)()"Color Theme based on Tron universe."single])(magit-tramp .[(0 1 0)((magit (1 2 0)))"git method for TRAMP"single])(aok .[(0 1)()"various useful ways to do `multi-occur'"single])(discord .[(0 5)()"Discordian dates for calendar"single])(pkg-info .[(0 5)((dash (1 6 0)) (epl (0 4)))"Information about packages       -*- lexical-binding: t; -*-"single])(dash-functional .[(1 0 0)((dash (2 0 0)) (emacs (24)))"Collection of useful combinators for Emacs Lisp  -*- lexical-binding: t -*-"single])(flycheck-cask .[(0 1)((flycheck (0 14)) (dash (2 0 0)) (f (0 6 0)))"Cask support in Flycheck -*- lexical-binding: t; -*-"single])(openstack-cgit-browse-file .[(0 2)()"Browse the current file in OpenStack cgit"single])(smtpmail-multi .[(0 6)()"Use different smtp servers for sending mail"single])(figlet .[(289)()"banner generator"single])(smart-whitespace-comment-fixup .[(1 0)()"Enables advice around yanking/killing lines that auto-indents and formats properly"single])(winpoint-ignore-dired .[(1 1)((winpoint (1 0)))"Have winpoint ignore dired-mode buffers"single])(comint-better-defaults .[(1 0)()"better defaults for comint-derived modes"single])(waher-theme .[(20130917 7)((emacs (24 1)))"Emacs 24 theme based on waher for st2 by dduckster"single])(gerrit-download .[(0 2)((magit (20130828 1540)))"Show gerrit reviews in a diff buffer."single])(multi .[(2 0 1)((emacs (24)))"Clojure-style multi-methods for emacs lisp -*- lexical-binding: t -*-"single])(evil-indent-textobject .[(0 2)((evil (0)))"evil textobjects based on indentation"single])(git-gutter+ .[(0 1)((git-commit-mode (1 0)))"Manage Git hunks straight from the buffer"single])(helm-helm-commands .[(0 2)((helm (1 5 4)))"List all helm commands with helm"single])(jujube-theme .[(0 1)()"Pastel theme loosely based on jellybeans"single])(wonderland .[(0 1 1)((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24)))"declarative configuration for Emacsen -*- lexical-binding: t -*-"single])(elfeed-web .[(1 1 0)((simple-httpd (1 4 3)) (elfeed (1 0 1)) (emacs (24 1)))"web interface to Elfeed"tar])(zone-matrix .[(0 0 1)()"Matrix themed Zone mode"tar])(shell-pop .[(0 3)()"helps you to use shell easily on Emacs. Only one key action to work."single])(awk-it .[(0 77)()"Run AWK interactively on region!"single])(osx-pseudo-daemon .[(1 0)()"Daemon mode that plays nice with OSX."single])(f .[(0 11 0)((s (1 7 0)) (dash (2 2 0)))"Modern API for working with files and directories"single])(whitespace-cleanup-mode .[(0 8)()"Intelligently call whitespace-cleanup on save"single])(isgd .[(20130927)()"Shorten URLs using the isgd.com shortener service"single])(java-file-create .[(1 0)()"automatically insert contents of empty java files"single])(ac-geiser .[(0 1)((geiser (0 5)) (auto-complete (1 4)))"Auto-complete backend for geiser"tar])(iasm-mode .[(0 1)()"interactive assembly major mode."single])(ample-zen-theme .[(0 2)()"AmpleZen Theme for Emacs 24"single])(tommyh-theme .[(1 2)()"A bright, bold-colored theme for emacs."single])(pbcopy .[(0 1 0)()"OS X clipboard integration for Emacs"single])(timestamper .[(0 1 0)()"A minor mode for easy timelogging"single])(tbemail .[(0 2)()"Provide syntax highlighting for email editing via"single])(ruby-end .[(0 3 1)()"Automatic insertion of end blocks for Ruby"single])(dpaste_de .[(0 2)((web (0 3 7)))"Emacs mode to paste to dpaste.de"single])(skewer-less .[(0 2)((skewer-mode (1 5 3)))"Skewer support for live LESS stylesheet updates"single])(sensitive .[(1 0 1)((emacs (24)) (sequences (0 1 0)))"A dead simple way to load sensitive information"single])(sequences .[(0 1 0)((emacs (24)))"Ports of some Clojure sequence functions."single])(magit-find-file .[(1 0 4)((magit (1 2 0)))"completing-read over all files in Git"single])(anzu .[(0 22)()"Show number of matches in mode-line while searching"single])(list-register .[(2 2)()"List register"single])(charmap .[(0 0 1)()"Unicode table for Emacs"single])(latest-clojure-libraries .[(0 5)()"Clojure dependency resolver"single])(proxy-mode .[(0 9)()"Provides proxy minor mode."single])(lyskom .[(20131008)()"LysKOM elisp client."single])(el-init .[(20130416)()"Loader for configuration files"tar])(relax .[(0 2)((json (1 2)))"For browsing and interacting with CouchDB"single])(ac-inf-ruby .[(0 4)((inf-ruby (2 3 2)) (auto-complete (1 4)))"Enable auto-complete in inf-ruby sessions"single])(json-snatcher .[(1 0)()"Grabs the path to JSON values in a JSON file."single])(nrepl-discover .[(0 0 1)()"Client to load commands from nrepl server"single])(ido-vertical-mode .[(0 1 2)()"Makes ido-mode display vertically."single])(minitest .[(0 5)((dash (1 0 0)))"An Emacs mode for ruby minitest files"single])(livid-mode .[(0 1 0)((skewer-mode (1 5 3)) (s (1 8 0)))"Live browser eval of JavaScript every time a buffer changes"single])(bert .[(0 1)()"BERT serialization library for Emacs"single])(ariadne .[(0 1)((bert (0 1)))"Ariadne plugin for Emacs"single])(prognth .[(1 0)()"Extend prog1 to arbitrary index"single])(free-keys .[(0 1)((cl-lib (0 3)))"Show free keybindings for modkeys or prefixes"single])(troncle .[(0 1 2)((cider (0 5 0)))"Emacs convenience functions for tracing clojure code"single])(tdd-status-mode-line .[(0 1 2)()"TDD status on the mode-line"single])(elixir-mix .[(0 3 0)()"Emacs integration for Elixir's mix"single])(zeal-at-point .[(0 0 3)()"Search the word at point with Zeal"single])(flycheck-hdevtools .[(0 2)((flycheck (0 15)))"A flycheck checker for Haskell using hdevtools"single])(ix .[(0 7)((grapnel (0 5 3)))"Emacs client for http://ix.io pastebin"single])(column-enforce-mode .[(1 0 3)()"Highlight text that extends beyond a  column"single])(pinboard-api .[(0 1)()"Rudimentary http://pinboard.in integration"single])(flycheck-ledger .[(0 2)((flycheck (0 15)))"Flycheck integration for ledger files"single])(gvpr-mode .[(0 1 0)()"A major mode offering basic syntax coloring for gvpr scripts."single])(telepathy .[(0 1)()"Access Telepathy from Emacs"single])(org-gnome .[(0 1)((notify (2010 8 20)) (telepathy (0 1)))"Orgmode integration with the GNOME desktop"single])(flymake-racket .[(0 40)((flymake-easy (0 1)))"A flymake handler for scheme-mode files"single])(dakrone-theme .[(0 0 2)()"dakrone's custom dark theme"single])(geiser .[(0 5)()"GNU Emacs and Scheme talk to each other"tar])(groovy-mode .[(20131129)()"Groovy mode derived mode"single])(ido-select-window .[(0 1 0)()"Select a window using ido and buffer names."tar])(bubbleberry-theme .[(0 1 2)((emacs (24 1)))"A theme based on LightTable for Emacs24"single])(go-mode .[(20131222)()"Major mode for the Go programming language"single])(gnus-summary-ext .[(0 1)((macro-utils (1 0)))"Extra limit and process mark commands for the gnus summary buffer"single])(clojure-mode .[(2 1 1)()"Major mode for Clojure code"single])(goto-chg .[(1 6)()"goto last change"single])(multi-project .[(0 0 15)()"Easily work with multiple projects."single])(wisp .[(0 1 3)()"Supporting tools for editing wisp: The Whitespace-to-Lisp preprocesor"single])(insert-shebang .[(0 9 3)()"Insert shebang line automatically."single])(steady-theme .[(0 1 0)()"A steady theme for Emacs  -*- lexical-binding: t -*-"single])(smex .[(3 0)()"M-x interface with Ido-style fuzzy matching."single])(paste-kde .[(0 6)((web (0 3 6)))"paste text to KDE's pastebin service"single])(less-css-mode .[(0 18)()"Major mode for editing LESS CSS files (lesscss.org)"single])(downplay-mode .[(0 1)()"focus attention on a region of the buffer"single])(nose-mode .[(0 1)((nose (0 1 1)))"Minor mode for running nose tests."tar])(refheap .[(0 0 6)((json (1 2)))"A library for pasting to https://refheap.com"single])(jam-mode .[(0 3)()"Font-lock support for Jam files"single])(fakir .[(0 1 8)((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19)))"fakeing bits of Emacs -*- lexical-binding: t -*-"single])(org-trello .[(0 4 3)((db (0 0 6)) (s (1 7 0)) (esxml (0 3 0)) (elnode (0 9 9 7 6)) (request (0 2 0)) (dash (2 5 0)))"Minor mode to synchronize org-mode buffer and trello board"tar])(toggle-test .[(1 0 1)()"Toggle between source and test files. It is language agnostic and creates source/test files if they don't exist."single])(desktop-registry .[(1 2 0)()"Keep a central registry of desktop files -*- lexical-binding: t -*-"single])(json-mode .[(1 2 0)()"Major mode for editing JSON files"single])(weather-metno .[(20140121)((emacs (24)) (cl-lib (0 3)))"Weather data from met.no in Emacs"tar])(remember-theme .[(20140122 1500)()"Remembers the last theme in use and re-loads for the next session."single])(pyvenv .[(1 1)()"Python virtual environment interface -*- lexical-binding: t -*-"single])(package .[(1 0 1)((tabulated-list (1 0)))"Simple package system for Emacs  -*- lexical-binding:t -*-"single])(cider .[(0 5 0)((clojure-mode (2 0 0)) (cl-lib (0 3)) (dash (2 4 1)) (pkg-info (0 4)))"Clojure Integrated Development Environment and REPL"tar])(scpaste .[(0 6 1)((htmlize (1 39)))"Paste to the web via scp."single])(xkcd .[(1 0)((json (1 4)))"View xkcd from Emacs"single])(wacspace .[(0 4 2)((dash (1 2 0)) (cl-lib (0 2)))"The WACky WorkSPACE manager for emACS"tar])(exercism .[(0 0 1)()"An Emacs mode for submitting current file to exercism.io"single])(es-windows .[(0 2)((cl-lib (0 3)) (emacs (24)))"Window-management utilities -*- lexical-binding: t -*-"single])(simple-httpd .[(1 4 5)((cl-lib (0 3)))"pure elisp HTTP server"single])(skewer-mode .[(1 6 0)((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24)))"live browser JavaScript, CSS, and HTML interaction"tar])(cl-lib-highlight .[(1 0 0)((cl-lib (0 3)))"full cl-lib font-lock highlighting"single])(memoize .[(1 0 1)()"Memoization functions -*- lexical-binding: t; -*-"single])(elfeed .[(1 1 0)((emacs (24 1)))"an Emacs Atom/RSS feed reader"tar])(cpputils-cmake .[(0 4 8)()"Easy real time C++ syntax check and intellisense if you use CMake"tar])(modtime-skip-mode .[(0 9 2)()"Minor mode for disabling modtime and supersession checks on files."single])(gecf .[(0 1 0)()"Göktuğ's Emacs configuration framework."single])(finalize .[(1 0 0)((emacs (24 1)) (cl-lib (0 3)) (eieio (1 4)))"finalizers for Emacs Lisp"tar])(python-mode .[(6 1 3)()"An Emacs mode for editing Python code"tar])(flycheck .[(0 18)((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (pkg-info (0 4)) (cl-lib (0 3)) (emacs (24 1)))"On-the-fly syntax checking (Flymake done right)"tar])(eshell-fringe-status .[(1 0 0)()"Show last status in fringe  -*- lexical-binding: t; -*-"single])(web-mode .[(8 0 4)()"major mode for editing html templates"single])(sass-mode .[(3 0 16)((haml-mode (3 0 15)))"Major mode for editing Sass files"single])(lxc .[(0 0 1)()"lxc integration with Emacs"single])(latex-preview-pane .[(20140204)()"Makes LaTeX editing less painful by providing a updatable preview pane. Full documentation can be found at: http://www.emacswiki.org/emacs/LaTeXPreviewPane"tar])(flycheck-tcl .[(0 4)((flycheck (0 17)))"A flycheck checker for Tcl using ActiveState's tclchecker"single])(maildir .[(0 0 23)((kv (0 0 17)) (dash (2 3 0)) (s (1 9 0)) (noflet (0 0 8)))"Simple maildir based MUA."tar])(google-translate .[(0 8 2)()"Emacs interface to Google Translate."tar])(sparql-mode .[(0 8 4)()"Edit and interactively evaluate SPARQL queries."tar])(puppet-mode .[(0 3)((emacs (24 1)) (cl-lib (0 5)) (pkg-info (0 4)))"Major mode for Puppet manifests  -*- lexical-binding: t; -*-"single])(epl .[(0 7)((cl-lib (0 3)))"Emacs Package Library -*- lexical-binding: t; -*-"single])(evil-nerd-commenter .[(1 3 1)()"Comment/uncomment lines efficiently. Like Nerd Commenter in Vim"tar])(hackernews .[(0 2 1)((json (1 2)))"Access the hackernews aggregator from Emacs"tar])(php-extras .[(2 2 0 20140405)((php-mode (1 5 0)))"Extra features for `php-mode'"tar])(iregister .[(0 2 1)()"Interactive register commands for Emacs."single])(flycheck-haskell .[(0 4)((flycheck (0 16)) (haskell-mode (13 7)) (dash (2 4 0)) (f (0 11 0)))"Flycheck: Cabal projects and sandboxes"tar])(elpa-mirror .[(1 1 2)()"ELPA mirror from locally installed packages is easy"tar])(org2nikola .[(0 0 8)()"export html and meta data used by static blog like nikola from org file"tar])(navigate .[(0 1 5)()"Seamlessly navigate between Emacs and tmux"single])(evil-matchit .[(1 2 9)()"Vim matchit ported into Emacs (requires EVIL)"tar])(creds .[(0 0 5 1)((dash (2 5 0)))"a simple parser credentials file lib"tar]))