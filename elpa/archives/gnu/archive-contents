(1
 (ack .
      [(1 3)
       nil "Interface to ack-like source code search tools" tar
       ((:keywords "tools" "processes" "convenience")
	(:url . "https://github.com/leoliu/ack-el"))])
 (ada-mode .
	   [(5 1 3)
	    ((wisi
	      (1 0 4))
	     (cl-lib
	      (0 4))
	     (emacs
	      (24 2)))
	    "major-mode for editing Ada sources" tar
	    ((:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html"))])
 (adaptive-wrap .
		[(0 5)
		 nil "Smart line-wrapping with wrap-prefix" single
		 ((:url . "http://elpa.gnu.org/packages/adaptive-wrap.html")
		  (:keywords))])
 (adjust-parens .
		[(3 0)
		 nil "Indent and dedent Lisp code, automatically adjust close parens" tar
		 ((:url . "http://elpa.gnu.org/packages/adjust-parens.html"))])
 (all .
      [(1 0)
       nil "Edit all lines matching a given regexp" single
       ((:url . "http://elpa.gnu.org/packages/all.html")
	(:keywords "matching"))])
 (ascii-art-to-unicode .
		       [(1 5)
			nil "a small artist adjunct" single
			((:url . "http://elpa.gnu.org/packages/ascii-art-to-unicode.html")
			 (:keywords))])
 (auctex .
	 [(11 87 4)
	  nil "Integrated environment for *TeX*" tar
	  ((:url . "http://www.gnu.org/software/auctex/"))])
 (cl-lib .
	 [(0 5)
	  nil "Properly prefixed CL functions and macros" single
	  ((:url . "http://elpa.gnu.org/packages/cl-lib.html")
	   (:keywords))])
 (coffee-mode .
	      [(0 4 1 1)
	       nil "Major mode for CoffeeScript files" single
	       ((:url . "http://github.com/defunkt/coffee-mode")
		(:keywords "coffeescript" "major" "mode"))])
 (company .
	  [(0 8 0)
	   ((emacs
	     (24 1))
	    (cl-lib
	     (0 5)))
	   "Modular text completion framework" tar
	   ((:keywords "abbrev" "convenience" "matching")
	    (:url . "http://company-mode.github.io/"))])
 (csv-mode .
	   [(1 2)
	    nil "Major mode for editing comma/char separated values" single
	    ((:url . "http://centaur.maths.qmul.ac.uk/Emacs/")
	     (:keywords "convenience"))])
 (debbugs .
	  [(0 6)
	   nil "SOAP library to access debbugs servers" tar
	   ((:keywords "comm" "hypermedia")
	    (:url . "http://elpa.gnu.org/packages/debbugs.html"))])
 (dict-tree .
	    [(0 12 8)
	     ((trie
	       (0 2 5))
	      (tNFA
	       (0 1 1))
	      (heap
	       (0 3)))
	     "Dictionary data structure" single
	     ((:url . "http://www.dr-qubit.org/emacs.php")
	      (:keywords "extensions" "matching" "data structures trie" "tree" "dictionary" "completion" "regexp"))])
 (diff-hl .
	  [(1 5 3)
	   ((cl-lib
	     (0 2)))
	   "Highlight uncommitted changes" tar
	   ((:keywords "vc" "diff")
	    (:url . "https://github.com/dgutov/diff-hl"))])
 (dismal .
	 [(1 5)
	  ((cl-lib
	    (0)))
	  "Dis Mode Ain't Lotus: Spreadsheet program Emacs" tar
	  ((:url . "http://elpa.gnu.org/packages/dismal.html"))])
 (djvu .
       [(0 5)
	nil "Edit and view Djvu files via djvused" single
	((:url . "http://elpa.gnu.org/packages/djvu.html")
	 (:keywords "files" "wp"))])
 (docbook .
	  [(0 1)
	   nil "Info-like viewer for DocBook" single
	   ((:url . "http://elpa.gnu.org/packages/docbook.html")
	    (:keywords "docs" "help"))])
 (easy-kill .
	    [(0 9 3)
	     ((emacs
	       (24))
	      (cl-lib
	       (0 5)))
	     "kill & mark things easily" tar
	     ((:keywords "killing" "convenience")
	      (:url . "https://github.com/leoliu/easy-kill"))])
 (ediprolog .
	    [(1 0)
	     nil "Emacs Does Interactive Prolog" single
	     ((:url . "http://elpa.gnu.org/packages/ediprolog.html")
	      (:keywords "languages" "processes"))])
 (eldoc-eval .
	     [(0 1)
	      nil "Enable eldoc support when minibuffer is in use." single
	      ((:url . "http://elpa.gnu.org/packages/eldoc-eval.html")
	       (:keywords))])
 (enwc .
       [(1 0)
	nil "The Emacs Network Client" tar
	((:keywords "enwc" "network" "wicd" "manager" "nm")
	 (:url . "http://elpa.gnu.org/packages/enwc.html"))])
 (epoch-view .
	     [(0 0 1)
	      nil "Minor mode to visualize epoch timestamps" single
	      ((:url . "http://elpa.gnu.org/packages/epoch-view.html")
	       (:keywords "data" "timestamp" "epoch" "unix"))])
 (f90-interface-browser .
			[(1 1)
			 nil "Parse and browse f90 interfaces" single
			 ((:url . "http://github.com/wence-/f90-iface/")
			  (:keywords))])
 (flylisp .
	  [(0 2)
	   nil "Color unbalanced parentheses and parentheses inconsistent with indentation" single
	   ((:url . "http://elpa.gnu.org/packages/flylisp.html")
	    (:keywords))])
 (ggtags .
	 [(0 8 3)
	  ((emacs
	    (24))
	   (cl-lib
	    (0 5)))
	  "emacs frontend to GNU Global source code tagging system" single
	  ((:url . "https://github.com/leoliu/ggtags")
	   (:keywords "tools" "convenience"))])
 (gnugo .
	[(2 3 1)
	 ((ascii-art-to-unicode
	   (1 5)))
	 "play GNU Go in a buffer" tar
	 ((:url . "http://elpa.gnu.org/packages/gnugo.html"))])
 (heap .
       [(0 3)
	nil "Heap (a.k.a. priority queue) data structure" single
	((:url . "http://www.dr-qubit.org/emacs.php")
	 (:keywords "extensions" "data structures" "heap" "priority queue"))])
 (ioccur .
	 [(2 4)
	  nil "Incremental occur" single
	  ((:url . "http://elpa.gnu.org/packages/ioccur.html")
	   (:keywords))])
 (jgraph-mode .
	      [(1 0)
	       nil "Major mode for Jgraph files" single
	       ((:url . "http://elpa.gnu.org/packages/jgraph-mode.html")
		(:keywords "tex" "wp"))])
 (js2-mode .
	   [(20140114)
	    ((emacs
	      (24 1)))
	    "Improved JavaScript editing mode" tar
	    ((:keywords "languages" "javascript")
	     (:url . "https://github.com/mooz/js2-mode/"))])
 (jumpc .
	[(3 0)
	 nil "jump to previous insertion points" single
	 ((:url . "http://elpa.gnu.org/packages/jumpc.html")
	  (:keywords))])
 (lex .
      [(1 1)
       nil "Lexical analyser construction" tar
       ((:url . "http://elpa.gnu.org/packages/lex.html"))])
 (lmc .
      [(1 3)
       nil "Little Man Computer in Elisp" single
       ((:url . "http://elpa.gnu.org/packages/lmc.html")
	(:keywords))])
 (load-dir .
	   [(0 0 3)
	    nil "Load all Emacs Lisp files in a given directory" single
	    ((:url . "http://elpa.gnu.org/packages/load-dir.html")
	     (:keywords "lisp" "files" "convenience"))])
 (markchars .
	    [(0 2 0)
	     nil "Mark chars fitting certain characteristics" single
	     ((:url . "http://elpa.gnu.org/packages/markchars.html")
	      (:keywords))])
 (memory-usage .
	       [(0 2)
		nil "Analyze the memory usage of Emacs in various ways" single
		((:url . "http://elpa.gnu.org/packages/memory-usage.html")
		 (:keywords "maint"))])
 (minimap .
	  [(1 2)
	   nil "Sidebar showing a \"mini-map\" of a buffer" single
	   ((:url . "http://elpa.gnu.org/packages/minimap.html")
	    (:keywords))])
 (muse .
       [(3 20)
	nil "Authoring and publishing tool for Emacs" tar
	((:keywords "hypermedia")
	 (:url . "http://mwolson.org/projects/EmacsMuse.html"))])
 (nhexl-mode .
	     [(0 1)
	      nil "Minor mode to edit files via hex-dump format" single
	      ((:url . "http://elpa.gnu.org/packages/nhexl-mode.html")
	       (:keywords "data"))])
 (nlinum .
	 [(1 3)
	  nil "Show line numbers in the margin" single
	  ((:url . "http://elpa.gnu.org/packages/nlinum.html")
	   (:keywords "convenience"))])
 (notes-mode .
	     [(1 30)
	      nil "Indexing system for on-line note-taking" tar
	      ((:url . "http://elpa.gnu.org/packages/notes-mode.html"))])
 (num3-mode .
	    [(1 2)
	     nil "highlight groups of digits in long numbers" single
	     ((:url . "http://elpa.gnu.org/packages/num3-mode.html")
	      (:keywords "faces" "minor-mode"))])
 (oauth2 .
	 [(0 10)
	  nil "OAuth 2.0 Authorization Protocol" single
	  ((:url . "http://elpa.gnu.org/packages/oauth2.html")
	   (:keywords "comm"))])
 (omn-mode .
	   [(1 0)
	    nil "Support for OWL Manchester Notation" single
	    ((:url . "http://elpa.gnu.org/packages/omn-mode.html")
	     (:keywords))])
 (org .
      [(20140505)
       nil "Outline-based notes management and organizer" tar nil])
 (quarter-plane .
		[(0 1)
		 nil "Minor mode for quarter-plane style editing" single
		 ((:url . "http://elpa.gnu.org/packages/quarter-plane.html")
		  (:keywords "convenience" "wp"))])
 (queue .
	[(0 1)
	 nil "Queue data structure" single
	 ((:url . "http://www.dr-qubit.org/emacs.php")
	  (:keywords "extensions" "data structures" "queue"))])
 (rainbow-mode .
	       [(0 9)
		nil "Colorize color names in buffers" single
		((:url . "http://elpa.gnu.org/packages/rainbow-mode.html")
		 (:keywords "faces"))])
 (register-list .
		[(0 1)
		 nil "Interactively list/edit registers" single
		 ((:url . "http://elpa.gnu.org/packages/register-list.html")
		  (:keywords "register"))])
 (shen-mode .
	    [(0 1)
	     nil "A major mode for editing shen source code" tar
	     ((:keywords "languages" "shen")
	      (:url . "http://elpa.gnu.org/packages/shen-mode.html"))])
 (sisu-mode .
	    [(3 0 3)
	     nil "Major mode for SiSU markup text" single
	     ((:url . "http://elpa.gnu.org/packages/sisu-mode.html")
	      (:keywords "text" "processes" "tools"))])
 (smart-operator .
		 [(4 0)
		  nil "Insert operators with surrounding spaces smartly" single
		  ((:url . "http://xwl.appspot.com/ref/smart-operator.el")
		   (:keywords))])
 (sml-mode .
	   [(6 4)
	    nil "Major mode for editing (Standard) ML" single
	    ((:url . "http://elpa.gnu.org/packages/sml-mode.html")
	     (:keywords "sml"))])
 (sokoban .
	  [(1 4)
	   nil "Implementation of Sokoban for Emacs." tar
	   ((:keywords "games")
	    (:url . "http://elpa.gnu.org/packages/sokoban.html"))])
 (svg-clock .
	    [(0 5)
	     nil "Analog clock using Scalable Vector Graphics" single
	     ((:url . "http://elpa.gnu.org/packages/svg-clock.html")
	      (:keywords "demo" "svg" "clock"))])
 (tNFA .
       [(0 1 1)
	((queue
	  (0 1)))
	"Tagged non-deterministic finite-state automata" single
	((:url . "http://www.dr-qubit.org/emacs.php")
	 (:keywords "extensions" "matching" "data structures tnfa" "nfa" "dfa" "finite state automata" "automata" "regexp"))])
 (temp-buffer-browse .
		     [(1 2)
		      nil "temp buffer browse mode" single
		      ((:url . "http://elpa.gnu.org/packages/temp-buffer-browse.html")
		       (:keywords "convenience"))])
 (trie .
       [(0 2 6)
	((tNFA
	  (0 1 1))
	 (heap
	  (0 3)))
	"Trie data structure" single
	((:url . "http://www.dr-qubit.org/emacs.php")
	 (:keywords "extensions" "matching" "data structures trie" "ternary search tree" "tree" "completion" "regexp"))])
 (undo-tree .
	    [(0 6 5)
	     nil "Treat undo history as a tree" single
	     ((:url . "http://www.dr-qubit.org/emacs.php")
	      (:keywords "convenience" "files" "undo" "redo" "history" "tree"))])
 (uni-confusables .
		  [(0 1)
		   nil "Unicode confusables table" tar
		   ((:url . "http://elpa.gnu.org/packages/uni-confusables.html"))])
 (vlf .
      [(1 5)
       nil "View Large Files" tar
       ((:keywords "large files" "utilities")
	(:url . "https://github.com/m00natic/vlfi"))])
 (w3 .
     [(4 0 49)
      nil "Fully customizable, largely undocumented web browser for Emacs" tar
      ((:keywords "faces" "help" "comm" "news" "mail" "processes" "mouse" "hypermedia")
       (:url . "http://elpa.gnu.org/packages/w3.html"))])
 (web-server .
	     [(0 1 0)
	      ((emacs
		(24 3)))
	      "Emacs Web Server" tar
	      ((:keywords "http" "server" "network")
	       (:url . "https://github.com/eschulte/emacs-web-server"))])
 (websocket .
	    [(1 1)
	     nil "Emacs WebSocket client and server" tar
	     ((:keywords "communication" "websocket" "server")
	      (:url . "http://elpa.gnu.org/packages/websocket.html"))])
 (windresize .
	     [(0 1)
	      nil "Resize windows interactively" single
	      ((:url . "http://elpa.gnu.org/packages/windresize.html")
	       (:keywords "window"))])
 (wisi .
       [(1 0 4)
	((cl-lib
	  (0 4))
	 (emacs
	  (24 2)))
	"Utilities for implementing an indentation/navigation engine using a generalized LALR parser" tar
	((:url . "http://stephe-leake.org/emacs/ada-mode/emacs-ada-mode.html"))])
 (wpuzzle .
	  [(1 1)
	   nil "find as many word in a given time" single
	   ((:url . "http://elpa.gnu.org/packages/wpuzzle.html")
	    (:keywords))])
 (xclip .
	[(1 3)
	 nil "use xclip to copy&paste" single
	 ((:url . "http://elpa.gnu.org/packages/xclip.html")
	  (:keywords "convenience" "tools"))])
 (yasnippet .
	    [(0 8 0)
	     nil "Yet another snippet extension for Emacs." tar
	     ((:keywords "convenience" "emulation")
	      (:url . "http://github.com/capitaomorte/yasnippet"))]))
